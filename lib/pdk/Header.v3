// `Header` represents an HTTP Request header.
// Multiple values for a single key are not deduped.
class Header {
	def map = Strings.newMap<string>();

	// hack to work around no inline function closures:
	var b: StringBuilder;
	var len: int;
	private def keyValueToJson(key: string, value: string, index: int) {
		if (index < len - 1) {
			b.put2("\"%s\":\"%s\",", key, value);
		} else {
			b.put2("\"%s\":\"%s\"", key, value);
		}
	}

	def toJson() -> string {
		len = map.length();
		b = StringBuilder.new();
		b.puts("{");
		map.applyWithIndex(keyValueToJson);
		b.puts("}");
		return b.toString();
	}

	// `add` adds a value to a named (by `key`) header field.
	// If the header key already exists, the value is appended after a comma.
	def add(key: string, value: string) {
		match (map.has(key)) {
			true => {
				var b = StringBuilder.new();
				b.puts(map[key]);
				b.puts(",");
				b.puts(value);
				map[key] = b.toString();
			}
			false => map[key] = value;
		}
	}

	// `set` overwrites a value to a named (by `key`) header field.
	def set(key: string, value: string) {
		map[key] = value;
	}
}