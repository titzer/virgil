// Copyright 2023 Virgil authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Utilities for Virgil functions.
component Functions {
	// Returns a function that commutes the inputs of {f} before applying {f}.
	def commute<A, B, R>(f: (A, B) -> R) -> (B, A) -> R {
		return commute0(f, _, _);
	}
	// Returns a closure that, when called, applies {func} to {a} and returns the result.
	def bind<A, B>(func: A -> B, a: A) -> void -> B {
		return closure(func, a, _);
	}
	// Returns a closure that, when called, applies {func} but drops its result.
	def voidify<A, B>(func: A -> B) -> A -> void {
		return voidify0(func, _);
	}
}
def commute0<A, B, R>(f: (A, B) -> R, b: B, a: A) -> R {
	return f(a, b);
}
def closure<A, B>(func: A -> B, a: A, v: void) -> B {
	return func(a);
}
def voidify0<A, B>(func: A -> B, a: A) -> void {
	func(a);
}
