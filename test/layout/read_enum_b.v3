//@execute 0=2; 1=1; 2=0; 3=!BoundsCheckException
enum E {
	A, B, C
}
layout ES {
	+0	val: E;
	=1;
}

def main(a: int) -> int {
	def bytes = clobber([E.C.tag, E.B.tag, E.A.tag], a, 1);
	var r = Ref<ES>.at(bytes, a);
	return r.val.tag;
}
def clobber(x: Array<byte>, a: int, count: int) -> Array<byte> {
	for (i = 0; i < a; i++) x[i] = 0xAA;
	for (i = a + count; i < x.length; i++) x[i] = 0xBB;
	return x;
}
