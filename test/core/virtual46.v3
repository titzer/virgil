//@execute (0,0,0,0,0)=0; (1,1,0,0,0)=10000; (2,0,2,3,0)=11000; (3,0,2,3,9)=10100; (4,0,2,3,4)=11010; (5,0,2,3,4)=11001

// A test of type hierarchy and method overrides

class A {
	var x: int;
	new(x) { }
	private def Aget() -> int { return x; }
	def get() -> int { return Aget(); }
}
class B1 extends A {
	var y1: int;
	new(x: int, y1) super(x) { }
	private def B1get() -> int { return Aget() + y1; }
	def get() -> int { return B1get(); }
}
class B2 extends A {
	var y2: int;
	new(x: int, y2) super(x) { }
	def get() -> int { return Aget() + y2; }
}
class C1 extends B1 {
	var z1: int;
	new(x: int, y: int, z1) super(x, y) { }
	def get() -> int { return B1get() + z1; }
}
class C2 extends B1 {
	var z2: int;
	new(x: int, y: int, z2) super(x, y) { }
	def get() -> int { return B1get() + z2 + z2; }
}

def main(i: int, i0: int, i1: int, i2: int, i3: int) -> int {
	var a: A;
	match (i) {
		1 => a = A.new(i0);
		2 => a = B1.new(i1, i2);
		3 => a = B2.new(i1, i2);
		4 => a = C1.new(i1, i2, i3);
		5 => a = C2.new(i1, i2, i3);
		_ => ;
	}
	return if(A.?(a), 10000, 0) +
	       if(B1.?(a), 1000, 0) +
	       if(B2.?(a), 100, 0) +
	       if(C1.?(a), 10, 0) +
	       if(C2.?(a), 1, 0);
}
