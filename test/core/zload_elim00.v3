//@execute (0, 0, 0)=true; (0, 0, 1)=false; (0, 1, 0)=false; (0, 1, 1)=true; (1, 0, 0)=true; (1, 0, 1)=false; (1, 1, 0)=false; (1, 1, 1)=true
class A {
	var i: int;
	new(i) { }
	def update(newi: int) {
		i = newi;
	}
}
class A1 extends A {
	new(i: int) super(i) { }
	def update(newi: int) {
		i = newi;
	}
}
def main(which: int, arg: int, val: int) -> bool {
	// A and A1 are both reachable, so CallClassVirtual will
	// normalize to CallClassSelector (not CallClassMethod)
	def a = if(which == 0, A.new(arg), A1.new(arg));
	var i = a.i;
	a.update(val);
	return a.i == i;
}
