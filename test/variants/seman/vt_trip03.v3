//@seman
type Triple<T> {
	def one() -> T;
	case None {
		def one() -> T { var n: T; return n; }
	}
	case One(a: T) {
		def one() -> T { return a; }
	}
	case Two(a: T, b: T) {
		def one() -> T { return a; }
	}
	case Three(a: T, b: T, c: T) {
		def one() -> T { return a; }
	}
}

def a: int = Triple<int>.None.one();
def b: byte = Triple<byte>.None.one();
def c: void = Triple<void>.None.one();
def d: bool = Triple<bool>.None.one();
