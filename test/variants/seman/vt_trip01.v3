//@seman
type Triple<T> {
	def sum(f: (T, T) -> T) -> T;
	case None {
		def sum(f: (T, T) -> T) -> T { var n: T; return n; }
	}
	case One(a: T) {
		def sum(f: (T, T) -> T) -> T { return a; }
	}
	case Two(a: T, b: T) {
		def sum(f: (T, T) -> T) -> T { return f(a, b); }
	}
	case Three(a: T, b: T, c: T) {
		def sum(f: (T, T) -> T) -> T { return f(f(a, b), c); }
	}
}
