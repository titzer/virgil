//@seman
class Visitor<P, R> {
	def visitA(a: Ast, p: P) -> R;
	def visitB(a: Ast, p: P) -> R;
	def visitC(a: Ast, p: P) -> R;
}
type Ast {
	case A {
		def accept<P, R>(v: Visitor<P, R>, a: P) -> R { return v.visitA(this, a); }
	}
	case B {
		def accept<P, R>(v: Visitor<P, R>, a: P) -> R { return v.visitB(this, a); }
	}
	case C {
		def accept<P, R>(v: Visitor<P, R>, a: P) -> R { return v.visitC(this, a); }
	}
}
