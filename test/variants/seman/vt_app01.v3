//@seman
type Applier<T> {
	def apply(p: T) -> T;
	case Once(f: T -> T) {
		def apply(p: T) -> T { return f(p); }
	}
	case Twice(f: T -> T) {
		def apply(p: T) -> T { return f(f(p)); }
	}
}
var x = Applier<int>.Once(int.!<int>);
var y = Applier<int>.Twice(int.!<int>);

var w = Applier<bool>.Once(bool.!<bool>);
var z = Applier<bool>.Twice(bool.!<bool>);
