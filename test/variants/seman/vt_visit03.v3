//@seman
class Visitor<E> {
    def visitA(n: int, e: E);
    def visitB(n: int, e: E);
}

type S {
	def accept<E>(v: Visitor<E>, e: E);
	case A(n: int) {
		def accept<E>(v: Visitor<E>, e: E) { v.visitA(n, e); }
	}
	case B(n: int) {
		def accept<E>(v: Visitor<E>, e: E) { v.visitB(n, e); }
	}
}

class PriceList { }
class Precious extends PriceList { }

class Thief extends Visitor<PriceList> {
	def visitA(n: int, e: PriceList) { }
	def visitB(n: int, e: PriceList) { }
}
