//@execute 0=-1; 1=-1; 2=!BoundsCheckException
type Value {
	case Ref(val: Object);
	case I32(val: i32);
}

type Arg {
	case FrameAccessor;
	case Val(v: Value);
}

class Object(val: int) { }

def args = Array<Arg>.new(2);

def main(a: int) -> int {
	match (args[a]) {
		FrameAccessor => {
			return liveness(a);
		}
		Val(val) => match (val) {
			Ref(v) => return if(v == null, -11, -22);
			I32(v) => return v;
		}
	}
}

def liveness(a: int) -> int {
	var o: Object;
	if (a < -3) o = Object.new(33 + a); // unreachable
	var v = if(a < -5, Value.I32(a), Value.Ref(o));
	return if(o != null, v.tag + o.val, -1);
}