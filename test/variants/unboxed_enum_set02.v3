//@execute 0=0; -1=16842753; 16842753=16842753
enum E {
	A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Aa, Ab, Ac, Ad, Ae, Af, 
	B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, Ba, Bb, Bc, Bd, Be, Bf,
	C0
}

class C { }

type T(c: C, s: E.set) #unboxed {
	def intersect(that: T) -> T {
		return T(C.new(), this.s & that.s);
	}
}

def mask = T(C.new(), E.A0 | E.B0 | E.B8);

def main(a: int) -> int {
	var x: E.set;
	for (e in E) {
		if ((a & (1 << e.tag)) != 0) x |= e;
	}
	var t = T(C.new(), x).intersect(mask);
	var r: int;
	for (e in t.s) {
		r |= (1 << e.tag);
	}
	return r;
}
