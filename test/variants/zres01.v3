//@execute false=-66; true=0

enum Error {
	NONE,
	BAD,
	EXTRA_BAD
}
type Result<T> {
	case Ok(v: T);
	case Error(e: Error);
}

var global_err = Error.NONE;

def main(a: bool) -> int {
	global_err = Error.NONE;
	match (do(a)) {
		Ok(v) => return second(v, 0);
		Error(e) => match (e) {
			NONE => return 0;
			BAD => return -55;
			EXTRA_BAD => return -66;
		}
	}
}

def do(a: bool) -> Result<void> {
	return if(a, Result.Ok(()), Result.Error(Error.EXTRA_BAD));
}

def second<A, B>(a: A, b: B) -> B {
	return b;
}

