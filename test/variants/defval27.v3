//@execute 0=0; 1=7; 2=10; 3=110; 4=114
type T {
	case Leaf(x: u32);
	case One(a: (T.Leaf, T.Leaf));
	case Two(a: T.One);
}

def main(a: int) -> u32 {
	var leaf: T.Leaf;
	var one: T.One;
	var two: T.Two;

	if (a == 0) return count(leaf);
	if (a == 1) return count(T.Leaf(7));
	if (a == 2) return count(one);
	if (a == 3) return count(two);
	if (a == 4) return count(T.Two(T.One(T.Leaf(4), leaf)));
	return 49;
}

def count(t: T) -> u32 {
	match (t) {
		Leaf(x) => return x;
		One(a) => return 10u + count(a.0) + count(a.1);
		Two(a) => return 100u + count(a);
	}
}
