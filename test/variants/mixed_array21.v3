//@execute 0=6; 1=17; 9234789=101582685; -2=-16
type Tree {
	case Leaf(val: int);
	case Branch(l: Tree, r: Tree);
	def sum() -> int {
		match (this) {
			Leaf(val) => return val;
			Branch(l, r) => return l.sum() + r.sum();
		}
	}
}

def main(a: int) -> int {
	var x = Array<(Tree, int)>.new(4);
	for (i < x.length) {
		x[i] = (newTree(a, i), i);
	}
	var sum = 0;
	for (e in x) {
		sum += e.1 + e.0.sum();
	}
	return sum;
}
def newTree(a: int, i: int) -> Tree {
	if (i <= 0) return Tree.Leaf(a);
	return Tree.Branch(newTree(a, i - 2), newTree(a, i - 1));
}