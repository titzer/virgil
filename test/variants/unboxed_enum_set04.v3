//@execute 0=0; -1=16842753; 16842753=16842753
enum E {
	A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Aa, Ab, Ac, Ad, Ae, Af, 
	B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, Ba, Bb, Bc, Bd, Be, Bf,
	C0
}

class C { }

type T #unboxed {
	case None(c0: C, c1: C);
	case Set(c0: C, s: E.set);

	def intersect(that: T) -> T {
		match (this) {
			None(c0, c1) => return if(c0 == c1, this, this);
			Set(c0, set0) => match (that) {
				None => return that;
				Set(_, set1) => return T.Set(c0, set0 & set1);
			}
		}
	}
	def set() -> E.set {
		return if(T.Set.?(this), T.Set.!(this).s);
	}
}



def mask = T.Set(C.new(), E.A0 | E.B0 | E.B8);

def main(a: int) -> int {
	var x: E.set;
	for (e in E) {
		if ((a & (1 << e.tag)) != 0) x |= e;
	}
	var t = T.Set(C.new(), x).intersect(mask);
	if (a == 9999) t = T.None(C.new(), C.new());
	var r: int;
	for (e in t.set()) {
		r |= (1 << e.tag);
	}
	return r;
}
