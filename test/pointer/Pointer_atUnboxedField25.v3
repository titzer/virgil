//@execute 0=0; 12=12
// tests possible issues related to unboxed field and parameterized types

type A<T>(i: T) #unboxed { }
type B<T>(a: A<T>, b: u32) #unboxed { }

class P { }
class Q extends P { }
class R<T> extends Q {
	var x: B<T>;
	def y: int;
	new(x, y) { }
	def getPtrx() -> Pointer {
		// legality depends on what T is
		return Pointer.atField(x.a.i);
	}
}
def main(n: int) -> int {
	var r = R<int>.new(B<int>(A<int>(n), 13), 15);
	var p = r.getPtrx();
	return p.load<int>();
}
