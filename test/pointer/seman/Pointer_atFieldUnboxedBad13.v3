//@seman=TypeError @ 21:17
// tests possible issues related to unboxed field and parameterized types

type A(i: int, j: int) #unboxed { }
type B(a: A, b: u32) #unboxed { }

class P { }
class Q extends P { }
class R<T> extends Q {
	var x: T;
	var y: int;
	new(x, y) { }
	def getPtrx() -> Pointer {
		// legality depends on what T is
		return Pointer.atField(x);
	}
}

def main(n: int) -> int {
	var r = R<B>.new(B(A(n, n), u32.view(n)), n);
	var p = Pointer.atField(r.x);
	return p.load<int>();
}
