00 Many cases, but Pointer.atField ops are optimizaed away, which means
   type constraints on the pointed-at field are not fully checked, since
   those checks are done only on *reachable* code.
01 field is optimized away if atField is optimized away and is only ref
02 field is *not* optimized away if atField is not optimized away
03 many tests of load, store, and cmpswp
04 checks values in a global from an initializing assignment
05 checks values in a named component from an initializing assignment
06 checks values in a class field from an initializing assignment
07 checks values in a class field from an initializing assignment, class in a component
08 checks values in a class field from an initializing assignment, class in a local
09 checks loads from a global
10 checks loads from a component
11 checks loads from a global class instance
12 checks loads from a class instance in a component
13 checks loads from a class instance in a local
14 checks cmpswps and stores into a global
15 checks cmpswps and stores into a component
16 checks cmpswps and stores into a global class instance
17 checks cmpswps and stores into a class instance, class in a component
18 checks cmpswps and stores into a class instance, class in a local
19 checks stores into a global
20 checks stores into a component
21 checks stores into a global class instance
22 checks stores into a class instance, class in a component
23 checks stores into a class instance, class in a local
24 field of type T, type legal (int)
25 field of type T, type legal (int) (different parameterization scheme)
26 type check of field in an unboxed class (ok case)
27 type check of field in an unboxed class (another ok case)
