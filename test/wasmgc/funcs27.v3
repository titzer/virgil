//@execute 0=13; 1=113; 2=213; 3=13; 4=113

// Test double function type subsumption of a function constant

class A {
	def m() -> int { return 11; }
}

class B extends A {
	def m() -> int { return 12; }
}

class C extends B {
	def m() -> int { return 13; }
}

def fa(x: A) -> int { return x.m(); }

def fb(x: B) -> int { return x.m() + 100; }

def fc(x: C) -> int { return x.m() + 200; }

def fba: B -> int = fa;
def fbb: B -> int = fb;

def fca: C -> int = fa;
def fcb: C -> int = fb;
def fcc: C -> int = fc;

def fcba: C -> int = fba;
def fcbb: C -> int = fbb;

def main(i: int) -> int {
	var arr: Array<C -> int> = [fca, fcb, fcc, fcba, fcbb];
	return arr[i](C.new());
}
