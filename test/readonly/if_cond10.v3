//@execute 0=0
class if_cond10_a {
}
class if_cond10_b {
}
class if_cond10_c {
}
def main(arg: int) -> int {
	m1(null, null);
	return 0;
}
def m1(expr: if_cond10_a, outer: if_cond10_b) -> if_cond10_b {
	var arity = 0;
	var etypes: array<if_cond10_b>;
	if (outer == null || arity != (etypes = toArray(outer)).length) {
	}
	var i = 0;
	while (i < arity) {
		typeCheckExpr(expr, etypes);
	}
	return null;
}
def toArray(expr: if_cond10_b) -> array<if_cond10_b> { return []; }
def typeCheckExpr(expr: if_cond10_a, t: array<if_cond10_b>) { }
