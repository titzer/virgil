//@execute =1

// An efficient data structure for a matrix of boolean values.
class BitMatrix(var numrows: int, var numcols: int) {
	private var width: int = (numcols + 31) >>> 5;      // width (in integers) of each row
	private var bits = Array<int>.new(numrows * width); // array that stores the data
	def rowInts(index: int) -> range<int> {
		if (index >= numrows) return null;
		return bits[(index * width) ..+ width];
	}
}

var arr: array<int> = [];
def assert(b: bool) {
    if (!b) var x = arr[2];
}

def main() -> int {
	var b = BitMatrix.new(10, 62);
	var x = b.rowInts(2);
	var y = b.rowInts(5);
	return 1;
}