//@execute (0, 10)=22; (1, 10)=2

// Test function implementation of function type subsumption with
// individual adapters

class A {
	def m() -> int { return 11; }
}

class B extends A {
	def m() -> int { return 12; }
}

def fa1(x: A, j: int) -> int { return x.m() + j; }
def fa2(x: A, j: int) -> int { return x.m() - j; }

def fb(x: B, j: int) -> int { return x.m() * j; }

def adapter(f: (A, int) -> int, b: B, j: int) -> int {
	return f(b, j);
}

def main(i: int, j: int) -> int {
	var arrA: Array<(A, int) -> int> = [fa1, fa2];
	var f: (B, int) -> int = adapter(arrA[i], _, _);
	return f(B.new(), j);
}
