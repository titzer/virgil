//@execute (0,0,0,0)=0; (1,0,0,0)=1000; (2,0,0,0)=1100; (3,0,0,0)=1110; (4,0,0,0)=1001

// A test of type hierarchy and method overrides

class A {
	def get() -> int { return 0; }
}
class B extends A {
	var x: int;
	new(x) { }
	def get() -> int { return x; }
}
class C extends B {
	var f: float;
	new(x: int, f) super(x) { }
	def get() -> int { return int.truncf(f) + x; }
}
class D extends A {
	var x: int;
	new(x) { }
	def get() -> int { return 2 * x; }
}
def main(i: int, j: int, k: int, m: int) -> int {
	var a: A;
	match (i) {
		1 => a = A.new();
		2 => a = B.new(j);
		3 => a = C.new(j, float.!(k));
		4 => a = D.new(m);
		_ => ;
	}
	return if (a == null, 0, a.get()) * 10000 +
	       if(A.?(a), 1000, 0) +
	       if(B.?(a), 100, 0) +
	       if(C.?(a), 10, 0) +
	       if(D.?(a), 1, 0);
}
