var iobuf = Array<long>.new(2);
def main() -> int {
	for (i < 10) {
		var r = wasi_snapshot_preview1.clock_res_get(i, Pointer.atContents(iobuf));
		if (r != 0) break;
		put_res(i, iobuf[0], iobuf[1]);
	}
	return 0;
}
def hexchars = "0123456789ABCDEF";
def put_res(i: int, l1: long, l2: long) {
	var buf = "00 0000000000000000\n";
	buf[0] = hexchars[i >> 4];
	buf[1] = hexchars[i & 0xFF];
	putx16(buf, 3, l1);

	puts(buf);
}
def putx16(buf: Array<byte>, offset: int, val: long) {
	for (j < 16) {
		buf[offset + j] = hexchars[val >>> 60];
		val = val << 4;
	}
}

def iovecs = Array<int>.new(2);
def puts(s: string) {
	iovecs[0] = Pointer.atContents(s) - Pointer.NULL;
	iovecs[1] = s.length;
	var ioptr = Pointer.atContents(iovecs);
	wasi_snapshot_preview1.fd_write(1, ioptr, 1, ioptr);
}
