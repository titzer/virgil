//@execute 0=true; 1=false
class A { }
class B extends A { }
class C extends A { }
enum T { M, N }
def f1(x: u32, y: u32, z: u32) => true;
def f2(x: u32, y: u32, z: u32) => false;
def copyT(x: u32, a: A, y: u32, z: u32) -> T {
	var r: bool;
	match (a) {
		ft: B => {
			r = f1(x, y, z);
		}
		vt: C => {
			r = f2(x, y, z);
		}
	}
	return if(r, T.M, T.N);
}
def main(a: int) -> bool {
	var t = if (a == 0, copyT(1, B.new(), 2, 3), copyT(1, C.new(), 2, 3));
	return t == T.M;
}
