//@execute (1,2,3)=17; (4,5,9)=56; (-3,2,-2)=-26
//@heap-size=2000
class Q {
	var r: int;
	new(a: (int, int, int)) { r = 2 * a.0 - 3 * a.1 + 7 * a.2; }
}
var expect: int;
var failed: int;
def main(a: int, b: int, c: int) -> int {
	failed = 0;
	expect = Q.new(a, b, c).r;

	check(fun => Q.new(a, _, _), (b, c));
	check(fun => Q.new(_, b, _), (a, c));
	check(fun => Q.new(_, _, c), (a, b));

	test2(Q.new(a, _, _), b, c);
	test2(Q.new(_, b, _), a, c);
	test2(Q.new(_, _, c), a, b);

	return if(failed == 0, expect);
}
def test2(f: (int, int) -> Q, p1: int, p2: int) {
	check(fun => f(p1, _), p2);
	check(fun => f(_, p2), p1);
}
def check<P>(f: void -> P -> Q, p: P) {
	if (expect != f()(p).r) failed++;
}
