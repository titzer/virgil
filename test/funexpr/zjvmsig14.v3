//@execute 0=0; 1=2
type Function(invoke: u32 -> Result) #unboxed;
type Result {
	case None;
	case Value(val: u32);
}

def Box_i(func: u32 -> u32) =>		Function(fun a => Result.Value(func(a)));
def Box_r(func: u32 -> Result) =>	Function(func);

def foo(a: u32) -> Result { return Result.Value(a); }
def bar(a: u32) => a;

def main(a: u32) -> u32 {
	def f = if(a == 0, Box_i(bar), Box_r(foo));

	match (f.invoke(a)) {
		None => ;
		Value(val) => return a + val;
	}
	return 0;
}
