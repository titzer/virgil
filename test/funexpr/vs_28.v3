//@execute 0=372; 1=372; 2=372
//@heap-size=2000
class Ja<T> {
	def m() => 1;
	def n() => Array<T>.new(2).length;
	def o() => 3;
}
class Jb<T> extends Ja<T> {
	def m() => 11;
	def n() => Array<T>.new(12).length;
	def o() => 13;
}
class Jc<T> extends Jb<T> {
	def m() => 21;
	def n() => Array<T>.new(22).length;
	def o() => 23;
}
class Jd<T> extends Jb<T> {
	def m() => 31;
	def n() => Array<T>.new(32).length;
	def o() => 33;
}
def main(a: int) -> int {
	match (a) {
		0 => return do<byte>();
		1 => return do<int>();
	} else return do<bool>();
}
def xa<T>() -> Array<Ja<T>> { return [Ja<T>.new(), Jb<T>.new(), Jc<T>.new(), Jd<T>.new()]; }
def xb<T>() -> Array<Jb<T>> { return [Jb<T>.new(), Jc<T>.new()]; }
def xc<T>() -> Array<Jc<T>> { return [Jc<T>.new()]; }
def xd<T>() -> Array<Jd<T>> { return []; }
def do<T>() -> int {
	var sum = 0;

	for (o in xa<T>()) sum = sum + o.m() + o.n() + o.o();
	for (o in xb<T>()) sum = sum + o.m() + o.n() + o.o();
	for (o in xc<T>()) sum = sum + o.m() + o.n() + o.o();
	for (o in xd<T>()) sum = sum + o.m() + o.n() + o.o();

	return sum;
}
