//@execute 0=4; 1=3; 2=2; 3=1
def meth(n: void, a: (int, int)) -> int {
	return 2 * a.0 - 3 * a.1 + 7;
}
var failed: int;
def main(a: int) -> int {
	var f = fun (x: (int, int)) => meth((), x);
	var m = f(_);
	return test2(m, a, a + 1, m(a, a + 1));
}
def test2(f: (int, int) -> int, p1: int, p2: int, x: int) -> int {
	check(fun (x: int) => f(p1, x), p2, x);
	check(fun (z: int) => f(z, p2), p1, x);
	if ((fun (w: int) => f(p1, w))(p2) != x) failed++;
	if ((fun (t: int) => f(t, p2))(p1) != x) failed++;
	return x;
}
def check<T>(f: T -> int, p: T, e: int) {
	if (e != f(p)) failed++;
}
