//@parse
def identity<T>(x: T) -> T => x;
def first<A, B>(a: A, b: B) -> A => a;
def compose<X, Y, Z>(f: X -> Y, g: Y -> Z) -> (X -> Z) => fun (x: X) => g(f(x));
def curry<A, B, C>(f: (A, B) -> C) -> (A -> (B -> C)) => fun (a: A) => fun (b: B) => f(a, b);