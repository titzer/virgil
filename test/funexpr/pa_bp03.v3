//@execute 0=1; 1=1; 2=3; 3=0; 4=5; 5=1; 6=7; 7=0; 8=9; 9=1; 10=11; 11=0; 12=13; 13=1; 14=15; 15=0
//@heap-size=2000
component pa_bp03 {
	def main(arg: int) -> int {
		var f: (int, bool) -> int;
		var t: (int, bool);
		var x = 888;
		var y = false;
		match (arg) {
			0,1 =>   { f = fun (t: int, u: bool) => big(arg, t, u, x, y, x, y, x, y, x, y, x, y, x, y, x, y); t = (1, true); }
			2,3 =>   { f = fun (t: int, u: bool) => big(arg, x, y, t, u, x, y, x, y, x, y, x, y, x, y, x, y); t = (3, false); }
			4,5 =>   { f = fun (t: int, u: bool) => big(arg, x, y, x, y, t, u, x, y, x, y, x, y, x, y, x, y); t = (5, true); }
			6,7 =>   { f = fun (t: int, u: bool) => big(arg, x, y, x, y, x, y, t, u, x, y, x, y, x, y, x, y); t = (7, false); }
			8,9 =>   { f = fun (t: int, u: bool) => big(arg, x, y, x, y, x, y, x, y, t, u, x, y, x, y, x, y); t = (9, true); }
			10,11 => { f = fun (t: int, u: bool) => big(arg, x, y, x, y, x, y, x, y, x, y, t, u, x, y, x, y); t = (11, false); }
			12,13 => { f = fun (t: int, u: bool) => big(arg, x, y, x, y, x, y, x, y, x, y, x, y, t, u, x, y); t = (13, true); }
			14,15 => { f = fun (t: int, u: bool) => big(arg, x, y, x, y, x, y, x, y, x, y, x, y, x, y, t, u); t = (15, false); }
		}
		return f(t);
	}
	def big(w: int, p0:  int, p1:  bool, p2:  int, p3:  bool, p4:  int, p5:  bool, p6:  int, p7:  bool, 
			   p8:  int, p9:  bool, p10: int, p11: bool, p12: int, p13: bool, p14: int, p15: bool) -> int {
		match (w) {
			0 => return p0;
			1 => return i(p1);
			2 => return p2;
			3 => return i(p3);
			4 => return p4;
			5 => return i(p5);
			6 => return p6;
			7 => return i(p7);
			8 => return p8;
			9 => return i(p9);
			10 => return p10;
			11 => return i(p11);
			12 => return p12;
			13 => return i(p13);
			14 => return p14;
			15 => return i(p15);
		}
		return 42;
	}
	def i(b: bool) -> int {
		if (b) return 1;
		return 0;
	}
}
