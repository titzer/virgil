// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

def T = LibTests.register("Longs", _, _);
def X = [
	T("parseMultiple", test_parseMultiple),
	T("parseNegative", test_parseNegative),
	T("log", test_log),
	T("popcnt", test_popcnt),
	()
];

def assertOk<T>(t: LibTest, f: (StringBuilder, T) -> StringBuilder, val: T, expected: string) {
	var b = StringBuilder.new();
	f(b, val);
	t.assert_string(expected, b.extract());
}

def doMultiple(t: LibTest, val: long, decimal: string, hex: string, bin: string) {
// TODO	var r1 = Longs.parseDecimal(decimal);
//	if (r1.0 <= 0) return t.fail(Strings.format3("expected decimal %d, status=%d for %s", val, r1.0, decimal));
//	if (r1.1 != val) return t.fail(Strings.format3("expected decimal %d, got=%d for %s", val, r1.1, decimal));

	var r2 = Longs.parse0xHex(hex);
	if (r2.0 <= 0) return t.fail(Strings.format3("expected hexadecimal 0x%x, status=%d for %s", val, r2.0, hex));
	if (r2.1 != u64.view(val)) return t.fail(Strings.format3("expected hexadecimal %x, got=%x for %s", val, r2.1, hex));
	r2 = Longs.parseHex(hex[2 ...]);
	if (r2.0 <= 0) return t.fail(Strings.format3("expected hexadecimal 0x%x, status=%d for %s", val, r2.0, hex));
	if (r2.1 != u64.view(val)) return t.fail(Strings.format3("expected hexadecimal %x, got=%x for %s", val, r2.1, hex));

	r2 = Longs.parse0bBin(bin);
	if (r2.0 <= 0) return t.fail(Strings.format3("expected binary 0x%x, status=%d for %s", val, r2.0, bin));
	if (r2.1 != u64.view(val)) return t.fail(Strings.format3("expected binary %x, got=%x for %s", val, r2.1, bin));
	r2 = Longs.parseBin(bin[2 ...]);
	if (r2.0 <= 0) return t.fail(Strings.format3("expected binary 0x%x, status=%d for %s", val, r2.0, bin));
	if (r2.1 != u64.view(val)) return t.fail(Strings.format3("expected binary %x, got=%x for %s", val, r2.1, bin));
}

def test_parseMultiple(t: LibTest) {
	def ok = doMultiple(t, _, _, _, _);

	ok(0,			"0",		"0x0",		"0b0");
	ok(0,			"0",		"0x000",	"0b0000");
	ok(0,			"0",		"0X0",		"0B0");
	ok(0,			"0",		"0X000",	"0B0000");
	ok(1000000000,	"1000000000",	"0x3b9aca00",	"0b111011100110101100101000000000");
	ok(1000000000,	"1000000000",	"0x3B9ACA00",	"0b111011100110101100101000000000");
	ok(2000000000,	"2000000000",	"0x77359400",	"0b1110111001101011001010000000000");
	ok(2000000000,	"2000000000",	"0x77359400",	"0b1110111001101011001010000000000");
	ok(1,			"1",		"0x1",		"0b1");
	ok(999999999, 	"999999999",	"0x3b9ac9ff",	"0b111011100110101100100111111111");
	ok(1000000001, 	"1000000001",	"0x3b9aca01",	"0b111011100110101100101000000001");
	ok(1999999999, 	"1999999999",	"0x773593ff",	"0b1110111001101011001001111111111");
	ok(2000000001, 	"2000000001",	"0x77359401",	"0b1110111001101011001010000000001");
	ok(2,			"2",		"0x2",		"0b10");
	ok(999999998, 	"999999998",	"0x3b9ac9fe",	"0b111011100110101100100111111110");
	ok(1000000002, 	"1000000002",	"0x3b9aca02",	"0b111011100110101100101000000010");
	ok(1999999998, 	"1999999998",	"0x773593fe",	"0b1110111001101011001001111111110");
	ok(2000000002, 	"2000000002",	"0x77359402",	"0b1110111001101011001010000000010");
	ok(3,			"3",		"0x3",		"0b11");
	ok(999999997, 	"999999997",	"0x3b9ac9fd",	"0b111011100110101100100111111101");
	ok(1000000003, 	"1000000003",	"0x3b9aca03",	"0b111011100110101100101000000011");
	ok(1999999997, 	"1999999997",	"0x773593fd",	"0b1110111001101011001001111111101");
	ok(2000000003, 	"2000000003",	"0x77359403",	"0b1110111001101011001010000000011");
	ok(4,			"4",		"0x4",		"0b100");
	ok(999999996, 	"999999996",	"0x3b9ac9fc",	"0b111011100110101100100111111100");
	ok(1000000004, 	"1000000004",	"0x3b9aca04",	"0b111011100110101100101000000100");
	ok(1999999996, 	"1999999996",	"0x773593fc",	"0b1110111001101011001001111111100");
	ok(2000000004, 	"2000000004",	"0x77359404",	"0b1110111001101011001010000000100");
	ok(5,			"5",		"0x5",		"0b101");
	ok(999999995, 	"999999995",	"0x3b9ac9fb",	"0b111011100110101100100111111011");
	ok(1000000005, 	"1000000005",	"0x3b9aca05",	"0b111011100110101100101000000101");
	ok(1999999995, 	"1999999995",	"0x773593fb",	"0b1110111001101011001001111111011");
	ok(2000000005, 	"2000000005",	"0x77359405",	"0b1110111001101011001010000000101");
	ok(6,			"6",		"0x6",		"0b110");
	ok(999999994, 	"999999994",	"0x3b9ac9fa",	"0b111011100110101100100111111010");
	ok(1000000006, 	"1000000006",	"0x3b9aca06",	"0b111011100110101100101000000110");
	ok(1999999994, 	"1999999994",	"0x773593fa",	"0b1110111001101011001001111111010");
	ok(2000000006, 	"2000000006",	"0x77359406",	"0b1110111001101011001010000000110");
	ok(7,			"7",		"0x7",		"0b111");
	ok(999999993, 	"999999993",	"0x3b9ac9f9",	"0b111011100110101100100111111001");
	ok(1000000007, 	"1000000007",	"0x3b9aca07",	"0b111011100110101100101000000111");
	ok(1999999993, 	"1999999993",	"0x773593f9",	"0b1110111001101011001001111111001");
	ok(2000000007, 	"2000000007",	"0x77359407",	"0b1110111001101011001010000000111");
	ok(8,			"8",		"0x8",		"0b1000");
	ok(999999992, 	"999999992",	"0x3b9ac9f8",	"0b111011100110101100100111111000");
	ok(1000000008, 	"1000000008",	"0x3b9aca08",	"0b111011100110101100101000001000");
	ok(1999999992, 	"1999999992",	"0x773593f8",	"0b1110111001101011001001111111000");
	ok(2000000008, 	"2000000008",	"0x77359408",	"0b1110111001101011001010000001000");
	ok(9,			"9",		"0x9",		"0b1001");
	ok(999999991, 	"999999991",	"0x3b9ac9f7",	"0b111011100110101100100111110111");
	ok(1000000009, 	"1000000009",	"0x3b9aca09",	"0b111011100110101100101000001001");
	ok(1999999991, 	"1999999991",	"0x773593f7",	"0b1110111001101011001001111110111");
	ok(2000000009, 	"2000000009",	"0x77359409",	"0b1110111001101011001010000001001");
	ok(10,			"10",	"0xa",		"0b1010");
	ok(999999990, 	"999999990",	"0x3b9ac9f6",	"0b111011100110101100100111110110");
	ok(1000000010, 	"1000000010",	"0x3b9aca0a",	"0b111011100110101100101000001010");
	ok(1999999990, 	"1999999990",	"0x773593f6",	"0b1110111001101011001001111110110");
	ok(2000000010, 	"2000000010",	"0x7735940a",	"0b1110111001101011001010000001010");
	ok(11,			"11",	"0xb",		"0b1011");
	ok(13,			"13",	"0xd",		"0b1101");
	ok(999999987, 	"999999987",	"0x3b9ac9f3",	"0b111011100110101100100111110011");
	ok(1000000013, 	"1000000013",	"0x3b9aca0d",	"0b111011100110101100101000001101");
	ok(1999999987, 	"1999999987",	"0x773593f3",	"0b1110111001101011001001111110011");
	ok(2000000013, 	"2000000013",	"0x7735940d",	"0b1110111001101011001010000001101");
	ok(14,			"14",	"0xe",		"0b1110");
	ok(999999986, 	"999999986",	"0x3b9ac9f2",	"0b111011100110101100100111110010");
	ok(1000000014, 	"1000000014",	"0x3b9aca0e",	"0b111011100110101100101000001110");
	ok(1999999986, 	"1999999986",	"0x773593f2",	"0b1110111001101011001001111110010");
	ok(2000000014, 	"2000000014",	"0x7735940e",	"0b1110111001101011001010000001110");
	ok(15,			"15",	"0xf",		"0b1111");
	ok(16,			"16",	"0x10",		"0b10000");
	ok(999999984, 	"999999984",	"0x3b9ac9f0",	"0b111011100110101100100111110000");
	ok(1000000016, 	"1000000016",	"0x3b9aca10",	"0b111011100110101100101000010000");
	ok(1999999984, 	"1999999984",	"0x773593f0",	"0b1110111001101011001001111110000");
	ok(2000000016, 	"2000000016",	"0x77359410",	"0b1110111001101011001010000010000");
	ok(17,			"17",	"0x11",		"0b10001");
	ok(999999982, 	"999999982",	"0x3b9ac9ee",	"0b111011100110101100100111101110");
	ok(1000000018, 	"1000000018",	"0x3b9aca12",	"0b111011100110101100101000010010");
	ok(1999999982, 	"1999999982",	"0x773593ee",	"0b1110111001101011001001111101110");
	ok(2000000018, 	"2000000018",	"0x77359412",	"0b1110111001101011001010000010010");
	ok(23,			"23",	"0x17",		"0b10111");
	ok(999999977, 	"999999977",	"0x3b9ac9e9",	"0b111011100110101100100111101001");
	ok(1000000023, 	"1000000023",	"0x3b9aca17",	"0b111011100110101100101000010111");
	ok(1999999977, 	"1999999977",	"0x773593e9",	"0b1110111001101011001001111101001");
	ok(2000000023, 	"2000000023",	"0x77359417",	"0b1110111001101011001010000010111");
	ok(42,			"42",	"0x2a",		"0b101010");
	ok(999999958, 	"999999958",	"0x3b9ac9d6",	"0b111011100110101100100111010110");
	ok(1000000042, 	"1000000042",	"0x3b9aca2a",	"0b111011100110101100101000101010");
	ok(1999999958, 	"1999999958",	"0x773593d6",	"0b1110111001101011001001111010110");
	ok(2000000042, 	"2000000042",	"0x7735942a",	"0b1110111001101011001010000101010");
	ok(101,			"101",	"0x65",		"0b1100101");
	ok(999999899, 	"999999899",	"0x3b9ac99b",	"0b111011100110101100100110011011");
	ok(1000000101, 	"1000000101",	"0x3b9aca65",	"0b111011100110101100101001100101");
	ok(1999999899, 	"1999999899",	"0x7735939b",	"0b1110111001101011001001110011011");
	ok(2000000101, 	"2000000101",	"0x77359465",	"0b1110111001101011001010001100101");
	ok(125,			"125",	"0x7d",		"0b1111101");
	ok(999999875, 	"999999875",	"0x3b9ac983",	"0b111011100110101100100110000011");
	ok(1000000125, 	"1000000125",	"0x3b9aca7d",	"0b111011100110101100101001111101");
	ok(1999999875, 	"1999999875",	"0x77359383",	"0b1110111001101011001001110000011");
	ok(2000000125, 	"2000000125",	"0x7735947d",	"0b1110111001101011001010001111101");
	ok(1001,	"1001",		"0x3e9",	"0b1111101001");
	ok(999998999, 	"999998999",	"0x3b9ac617",	"0b111011100110101100011000010111");
	ok(1000001001, 	"1000001001",	"0x3b9acde9",	"0b111011100110101100110111101001");
	ok(1999998999, 	"1999998999",	"0x77359017",	"0b1110111001101011001000000010111");
	ok(2000001001, 	"2000001001",	"0x773597e9",	"0b1110111001101011001011111101001");
	ok(1120,	"1120",		"0x460",	"0b10001100000");
	ok(999998880, 	"999998880",	"0x3b9ac5a0",	"0b111011100110101100010110100000");
	ok(1000001120, 	"1000001120",	"0x3b9ace60",	"0b111011100110101100111001100000");
	ok(1999998880, 	"1999998880",	"0x77358fa0",	"0b1110111001101011000111110100000");
	ok(2000001120, 	"2000001120",	"0x77359860",	"0b1110111001101011001100001100000");
	ok(32767,	"32767",	"0x7fff",	"0b111111111111111");
	ok(999967233, 	"999967233",	"0x3b9a4a01",	"0b111011100110100100101000000001");
	ok(1000032767, 	"1000032767",	"0x3b9b49ff",	"0b111011100110110100100111111111");
	ok(1999967233, 	"1999967233",	"0x77351401",	"0b1110111001101010001010000000001");
	ok(2000032767, 	"2000032767",	"0x773613ff",	"0b1110111001101100001001111111111");
	ok(32768,	"32768",	"0x8000",	"0b1000000000000000");
	ok(999967232, 	"999967232",	"0x3b9a4a00",	"0b111011100110100100101000000000");
	ok(1000032768, 	"1000032768",	"0x3b9b4a00",	"0b111011100110110100101000000000");
	ok(1999967232, 	"1999967232",	"0x77351400",	"0b1110111001101010001010000000000");
	ok(2000032768, 	"2000032768",	"0x77361400",	"0b1110111001101100001010000000000");
	ok(32769,	"32769",	"0x8001",	"0b1000000000000001");
	ok(999967231, 	"999967231",	"0x3b9a49ff",	"0b111011100110100100100111111111");
	ok(1000032769, 	"1000032769",	"0x3b9b4a01",	"0b111011100110110100101000000001");
	ok(1999967231, 	"1999967231",	"0x773513ff",	"0b1110111001101010001001111111111");
	ok(2000032769, 	"2000032769",	"0x77361401",	"0b1110111001101100001010000000001");
	ok(64000,	"64000",	"0xfa00",	"0b1111101000000000");
	ok(999936000, 	"999936000",	"0x3b99d000",	"0b111011100110011101000000000000");
	ok(1000064000, 	"1000064000",	"0x3b9bc400",	"0b111011100110111100010000000000");
	ok(1999936000, 	"1999936000",	"0x77349a00",	"0b1110111001101001001101000000000");
	ok(2000064000, 	"2000064000",	"0x77368e00",	"0b1110111001101101000111000000000");
	ok(65535,	"65535",	"0xffff",	"0b1111111111111111");
	ok(999934465, 	"999934465",	"0x3b99ca01",	"0b111011100110011100101000000001");
	ok(1000065535, 	"1000065535",	"0x3b9bc9ff",	"0b111011100110111100100111111111");
	ok(1999934465, 	"1999934465",	"0x77349401",	"0b1110111001101001001010000000001");
	ok(2000065535, 	"2000065535",	"0x773693ff",	"0b1110111001101101001001111111111");
	ok(65536,	"65536",	"0x10000",	"0b10000000000000000");
	ok(999934464, 	"999934464",	"0x3b99ca00",	"0b111011100110011100101000000000");
	ok(1000065536, 	"1000065536",	"0x3b9bca00",	"0b111011100110111100101000000000");
	ok(1999934464, 	"1999934464",	"0x77349400",	"0b1110111001101001001010000000000");
	ok(2000065536, 	"2000065536",	"0x77369400",	"0b1110111001101101001010000000000");
	ok(1000982,	"1000982",	"0xf4616",	"0b11110100011000010110");
	ok(998999018, 	"998999018",	"0x3b8b83ea",	"0b111011100010111000001111101010");
	ok(1001000982, 	"1001000982",	"0x3baa1016",	"0b111011101010100001000000010110");
	ok(1998999018, 	"1998999018",	"0x77264dea",	"0b1110111001001100100110111101010");
	ok(2001000982, 	"2001000982",	"0x7744da16",	"0b1110111010001001101101000010110");
	ok(2147483647, 	"2147483647",	"0x7fffffff",	"0b1111111111111111111111111111111");
	ok(2147483646, 	"2147483646",	"0x7ffffffe",	"0b1111111111111111111111111111110");
	ok(2147483647, 	"2147483647",	"0x7fffffff",	"0b1111111111111111111111111111111");

	ok(2147483646, 	"2147483646",	"0x7fFFfffE",	"0b1111111111111111111111111111110");
	ok(999934465, 	"999934465",	"0X3B99CA01",	"0B111011100110011100101000000001");
	ok(1000065535, 	"1000065535",	"0X3B9BC9FF",	"0B111011100110111100100111111111");
	ok(999999997, 	"999999997",	"0X3B9AC9FD",	"0B111011100110101100100111111101");
	ok(32768,	"32768",	"0x8000",	"0b01000000000000000");
	ok(32768,	"32768",	"0x8000",	"0b00001000000000000000");
	ok(32768,	"32768",	"0x8000",	"0b00000000000000001000000000000000");

	ok(3,		"3",		"0x3",		"0b0011");
	ok(3,		"3",		"0x03",		"0b000011");
	ok(3,		"3",		"0x003",	"0b0000011");
	ok(3,		"3",		"0x0003",	"0b0000000011");

	ok(571844575132886007L,	"571844575132886007",	"0x07EF999C7F87A3F7",	"0b0000011111101111100110011001110001111111100001111010001111110111");
	ok(4002912025930202050L,	"4002912025930202050",	"0x378D33477CB57BC2",	"0b0011011110001101001100110100011101111100101101010111101111000010");
	ok(7939763439552483623L,	"7939763439552483623",	"0x6E2FB4C81728D127",	"0b0110111000101111101101001100100000010111001010001101000100100111");
	ok(238111855738730514L,	"238111855738730514",	"0x034DF178A21DB812",	"0b0000001101001101111100010111100010100010000111011011100000010010");
	ok(1666782990171113599L,	"1666782990171113599",	"0x17219A4C6ED0087F",	"0b0001011100100001100110100100110001101110110100000000100001111111");
	ok(7885390223546359895L,	"7885390223546359895",	"0x6D6E88A135D1A057",	"0b0110110101101110100010001010000100110101110100011010000001010111");
	ok(6462507108810150279L,	"6462507108810150279",	"0x59AF6FF9C310D187",	"0b0101100110101111011011111111100111000011000100001101000110000111");
	ok(8344061614251948722L,	"8344061614251948722",	"0x73CC0FD45575BAB2",	"0b0111001111001100000011111101010001010101011101011011101010110010");
	ok(3068199078634986207L,	"3068199078634986207",	"0x2A946ECE56381ADF",	"0b0010101010010100011011101100111001010110001110000001101011011111");
	ok(3030649476735351834L,	"3030649476735351834",	"0x2A0F07A45B88BC1A",	"0b0010101000001111000001111010010001011011100010001011110000011010");
	ok(2767802263437911223L,	"2767802263437911223",	"0x2669357E80BD24B7",	"0b0010011001101001001101010111111010000000101111010010010010110111");

}

def test_parseNegative(t: LibTest) {
	def ok = doMultiple(t, _, _, _, _);
	ok(u32.view(-1),	"-1",	"0xffffffff",	"0b11111111111111111111111111111111");
	ok(u32.view(-2),	"-2",	"0xfffffffe",	"0b11111111111111111111111111111110");
	ok(u32.view(-3),	"-3",	"0xfffffffd",	"0b11111111111111111111111111111101");
	ok(u32.view(-4),	"-4",	"0xfffffffc",	"0b11111111111111111111111111111100");
	ok(u32.view(-5),	"-5",	"0xfffffffb",	"0b11111111111111111111111111111011");
	ok(u32.view(-6),	"-6",	"0xfffffffa",	"0b11111111111111111111111111111010");
	ok(u32.view(-7),	"-7",	"0xfffffff9",	"0b11111111111111111111111111111001");
	ok(u32.view(-8),	"-8",	"0xfffffff8",	"0b11111111111111111111111111111000");
	ok(u32.view(-9),	"-9",	"0xfffffff7",	"0b11111111111111111111111111110111");
	ok(u32.view(-10),	"-10",	"0xfffffff6",	"0b11111111111111111111111111110110");
	ok(u32.view(-11),	"-11",	"0xfffffff5",	"0b11111111111111111111111111110101");
	ok(u32.view(-13),	"-13",	"0xfffffff3",	"0b11111111111111111111111111110011");
	ok(u32.view(-14),	"-14",	"0xfffffff2",	"0b11111111111111111111111111110010");
	ok(u32.view(-15),	"-15",	"0xfffffff1",	"0b11111111111111111111111111110001");
	ok(u32.view(-16),	"-16",	"0xfffffff0",	"0b11111111111111111111111111110000");
	ok(u32.view(-17),	"-17",	"0xffffffef",	"0b11111111111111111111111111101111");
	ok(u32.view(-23),	"-23",	"0xffffffe9",	"0b11111111111111111111111111101001");
	ok(u32.view(-42),	"-42",	"0xffffffd6",	"0b11111111111111111111111111010110");
	ok(u32.view(-101),	"-101",	"0xffffff9b",	"0b11111111111111111111111110011011");
	ok(u32.view(-125),	"-125",	"0xffffff83",	"0b11111111111111111111111110000011");
	ok(u32.view(-1001),	"-1001",	"0xfffffc17",	"0b11111111111111111111110000010111");
	ok(u32.view(-1120),	"-1120",	"0xfffffba0",	"0b11111111111111111111101110100000");
	ok(u32.view(-32767),	"-32767",	"0xffff8001",	"0b11111111111111111000000000000001");
	ok(u32.view(-32768),	"-32768",	"0xffff8000",	"0b11111111111111111000000000000000");
	ok(u32.view(-32769),	"-32769",	"0xffff7fff",	"0b11111111111111110111111111111111");
	ok(u32.view(-64000),	"-64000",	"0xffff0600",	"0b11111111111111110000011000000000");
	ok(u32.view(-65535),	"-65535",	"0xffff0001",	"0b11111111111111110000000000000001");
	ok(u32.view(-65536),	"-65536",	"0xffff0000",	"0b11111111111111110000000000000000");
	ok(u32.view(-1000982),	"-1000982",	"0xfff0b9ea",	"0b11111111111100001011100111101010");
	ok(u32.view(-2147483648), "-2147483648",	"0x80000000",	"0b10000000000000000000000000000000");
	ok(u32.view(-2147483648), "-2147483648",	"0x80000000",	"0b10000000000000000000000000000000");
	ok(u32.view(-2147483647), "-2147483647",	"0x80000001",	"0b10000000000000000000000000000001");
	ok(u32.view(-32768),	"-32768",	"0xFFFF8000",	"0b11111111111111111000000000000000");
	ok(u32.view(-32767),	"-32767",	"0xFFFF8001",	"0b11111111111111111000000000000001");
	ok(u32.view(-65536),	"-65536",	"0xFFFF0000",	"0b11111111111111110000000000000000");
	ok(u32.view(-65535),	"-65535",	"0xFFFF0001",	"0b11111111111111110000000000000001");

	ok(-1,			"-1",	"0xffffffffffffffff",	"0b1111111111111111111111111111111111111111111111111111111111111111");
	ok(-2,			"-2",	"0xfffffffffffffffe",	"0b1111111111111111111111111111111111111111111111111111111111111110");
	ok(-3,			"-3",	"0xfffffffffffffffd",	"0b1111111111111111111111111111111111111111111111111111111111111101");
	ok(-4,			"-4",	"0xfffffffffffffffc",	"0b1111111111111111111111111111111111111111111111111111111111111100");
	ok(-5,			"-5",	"0xfffffffffffffffb",	"0b1111111111111111111111111111111111111111111111111111111111111011");
	ok(-6,			"-6",	"0xfffffffffffffffa",	"0b1111111111111111111111111111111111111111111111111111111111111010");
	ok(-7,			"-7",	"0xfffffffffffffff9",	"0b1111111111111111111111111111111111111111111111111111111111111001");

	ok(-8,			"-8",	"0xfffffffffffffff8",	"0b1111111111111111111111111111111111111111111111111111111111111000");
	ok(-9,			"-9",	"0xfffffffffffffff7",	"0b1111111111111111111111111111111111111111111111111111111111110111");
	ok(-10,			"-10",	"0xfffffffffffffff6",	"0b1111111111111111111111111111111111111111111111111111111111110110");
	ok(-11,			"-11",	"0xfffffffffffffff5",	"0b1111111111111111111111111111111111111111111111111111111111110101");
	ok(-13,			"-13",	"0xfffffffffffffff3",	"0b1111111111111111111111111111111111111111111111111111111111110011");
	ok(-14,			"-14",	"0xfffffffffffffff2",	"0b1111111111111111111111111111111111111111111111111111111111110010");
	ok(-15,			"-15",	"0xfffffffffffffff1",	"0b1111111111111111111111111111111111111111111111111111111111110001");
	ok(-16,			"-16",	"0xfffffffffffffff0",	"0b1111111111111111111111111111111111111111111111111111111111110000");
	ok(-17,			"-17",	"0xffffffffffffffef",	"0b1111111111111111111111111111111111111111111111111111111111101111");
	ok(-23,			"-23",	"0xffffffffffffffe9",	"0b1111111111111111111111111111111111111111111111111111111111101001");
	ok(-42,			"-42",	"0xffffffffffffffd6",	"0b1111111111111111111111111111111111111111111111111111111111010110");
	ok(-101,		"-101",	"0xffffffffffffff9b",	"0b1111111111111111111111111111111111111111111111111111111110011011");
	ok(-125,		"-125",	"0xffffffffffffff83",	"0b1111111111111111111111111111111111111111111111111111111110000011");
	ok(-1001,	"-1001",	"0xfffffffffffffc17",	"0b1111111111111111111111111111111111111111111111111111110000010111");
	ok(-1120,	"-1120",	"0xfffffffffffffba0",	"0b1111111111111111111111111111111111111111111111111111101110100000");
	ok(-32767,	"-32767",	"0xffffffffffff8001",	"0b1111111111111111111111111111111111111111111111111000000000000001");
	ok(-32768,	"-32768",	"0xffffffffffff8000",	"0b1111111111111111111111111111111111111111111111111000000000000000");
	ok(-32769,	"-32769",	"0xffffffffffff7fff",	"0b1111111111111111111111111111111111111111111111110111111111111111");
	ok(-64000,	"-64000",	"0xffffffffffff0600",	"0b1111111111111111111111111111111111111111111111110000011000000000");
	ok(-65535,	"-65535",	"0xffffffffffff0001",	"0b1111111111111111111111111111111111111111111111110000000000000001");
	ok(-65536,	"-65536",	"0xffffffffffff0000",	"0b1111111111111111111111111111111111111111111111110000000000000000");
	ok(-1000982,	"-1000982",	"0xfffffffffff0b9ea",	"0b1111111111111111111111111111111111111111111100001011100111101010");
	ok(-2147483648, "-2147483648",	"0xffffffff80000000",	"0b1111111111111111111111111111111110000000000000000000000000000000");
	ok(-2147483648, "-2147483648",	"0xffffffff80000000",	"0b1111111111111111111111111111111110000000000000000000000000000000");
	ok(-2147483647, "-2147483647",	"0xffffffff80000001",	"0b1111111111111111111111111111111110000000000000000000000000000001");
	ok(-32768,	"-32768",	"0xffffffffFFFF8000",	"0b1111111111111111111111111111111111111111111111111000000000000000");
	ok(-32767,	"-32767",	"0xffffffffFFFF8001",	"0b1111111111111111111111111111111111111111111111111000000000000001");
	ok(-65536,	"-65536",	"0xffffffffFFFF0000",	"0b1111111111111111111111111111111111111111111111110000000000000000");
	ok(-65535,	"-65535",	"0xffffffffFFFF0001",	"0b1111111111111111111111111111111111111111111111110000000000000001");

	ok(-8873103965907688881L,	"-8873103965907688881",	"0x84DC66F468F6624F",	"0b1000010011011100011001101111010001101000111101100110001001001111");
	ok(-6771495540225167318L,	"-6771495540225167318",	"0xA206D0AEDEBCB02A",	"0b1010001000000110110100001010111011011110101111001011000000101010");
	ok(-6779263142511756422L,	"-6779263142511756422",	"0xA1EB381707B03B7A",	"0b1010000111101011001110000001011100000111101100000011101101111010");
	ok(-142500656304135582L,	"-142500656304135582",	"0xFE05BC6878BB6262",	"0b1111111000000101101111000110100001111000101110110110001001100010");
	ok(-997504594128949073L,	"-997504594128949073",	"0xF22826DB4D1FB0AF",	"0b1111001000101000001001101101101101001101000111111011000010101111");
	ok(-6982532158902643510L,	"-6982532158902643510",	"0x9F190FFF1BDDD4CA",	"0b1001111100011001000011111111111100011011110111011101010011001010");
}

def test_log(t: LibTest) {
	def log = Longs.log;
	def ok = t.asserteq<int>;

	ok(-1, log(0));
	ok(0, log(1));
	ok(1, log(2));
	ok(1, log(3));
	ok(2, log(4));
	ok(4, log(19));
	ok(6, log(127));
	ok(7, log(128));
	ok(7, log(129));
	ok(9, log(999));
	ok(13, log(9999));
	ok(16, log(88888));
	ok(19, log(777777));
	ok(22, log(6666666));
	ok(25, log(55555555));
	ok(28, log(444444444));
	ok(31, log(3333333333u));

	for (i < 64) {
		ok(i, log(1uL << u6.view(i)));
		ok(i, log(1uL | 1uL << u6.view(i)));
	}
}

def test_popcnt(t: LibTest) {
	t.asserteq(0, Longs.popcnt(0));
	t.asserteq(1, Longs.popcnt(1));
	t.asserteq(2, Longs.popcnt(3));
	t.asserteq(2, Longs.popcnt(5));

	for (i = 1uL; i != 0; i <<= 1) {
		t.asserteq(1, Longs.popcnt(i));
	}
	t.asserteq(64, Longs.popcnt(0xFFFF_FFFF_FFFF_FFFF));
	t.asserteq(48, Longs.popcnt(0x0000_FFFF_FFFF_FFFF));
	t.asserteq(48, Longs.popcnt(0xFFFF_FFFF_FFFF_0000));
	t.asserteq(32, Longs.popcnt(0xFFFF_FFFF_0000_0000));
	t.asserteq(32, Longs.popcnt(0x0000_0000_FFFF_FFFF));
	t.asserteq(16, Longs.popcnt(0x0000_FFFF));
	t.asserteq(16, Longs.popcnt(0xFFFF_0000));
	t.asserteq(8, Longs.popcnt(0x0000_F00F));
	t.asserteq(8, Longs.popcnt(0xF00F_0000));
	t.asserteq(4, Longs.popcnt(0x0000_C00C));
	t.asserteq(4, Longs.popcnt(0xC00C_0000));
	t.asserteq(2, Longs.popcnt(0x1001_0000));
	t.asserteq(2, Longs.popcnt(0x1000_0080));
}
