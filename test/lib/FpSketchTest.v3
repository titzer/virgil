def T = LibTests.register("fpsketch:", _, _);
def X_ = void(
	T("parser", test_parser),
	T("mulAdd32", test_mulAdd32),
	T("addPow2", test_addPow2),
	T("highestOneBit", test_highestOneBit),
	T("round", test_round),
	T("divu32", test_divu32),
	T("divexp", test_divexp),
	T("divu64", test_divu64),
	T("div", test_div),
	T("rev", test_rev),
	()
);

private class FpSketchTester(t: LibTest) {
	def assert_bi(expected: Array<u32>, bi: FpSketch) {
		if (bi.words.length < expected.length) {
			t.fail2("expected %d words, got %d", expected.length, bi.words.length);
		}
		for (i < expected.length) {
			if (bi.words[i] != expected[i]) {
				t.fail3("expected words[%d] == %x, got %x", i, expected[i], bi.words[i]);
			}
		}
		for (j = expected.length; j < bi.words.length; j++) {
			if (bi.words[j] != 0) t.fail1("expected words[%d] == 0", j);
		}
	}
	def assert_bf(expected: FpSketch, bi: FpSketch) {
//		bi = norm(bi);
		if (bi.words.length < expected.words.length) {
			t.fail2("expected %d words, got %d", expected.words.length, bi.words.length);
		}
		for (i < expected.words.length) {
			if (bi.words[i] != expected.words[i]) {
				t.fail3("expected words[%d] == %x, got %x", i, expected.words[i], bi.words[i]);
			}
		}
		for (j = expected.words.length; j < bi.words.length; j++) {
			if (bi.words[j] != 0) t.fail1("expected words[%d] == 0", j);
		}
		if (bi.exp != expected.exp) {
			t.fail2("expected exp == %d, got %d", expected.exp, bi.exp);
		}
	}
	def assert_div(q: string, x: bool, num: string, denom: string, qmin: u31) {
		var gotq = bf(num);
		var gotx = gotq.div(bf(denom), qmin);
		assert_bf(bf(q), gotq);
		t.asserteq(x, gotx);
	}
}

// Parse a string into a FpSketch.
def bf(s: string) -> FpSketch {
	var v = Vector<u32>.new(), l = 0;
	var w: u32;  // current word
	var p = -1;
	for (i = 0; i < s.length; i++) {
		var ch = s[i];
		match (ch) {
			'_' => {
				if (l != i && l != 8) System.error("FpSketchParser", "incorrect _ breaking");
				v.put(w);
				w = 0u;
				l = 0;
			}
			'.' => {
				if (p >= 0) System.error("FpSketchParser", "multiple periods");
				if (l != i && l != 8) System.error("FpSketchParser", "incorrect . breaking");
				if (l > 0) {
					v.put(w);
					w = 0u;
					l = 0;
				}
				p = v.length;
			}
			'w' => {
				if (p >= 0) System.error("FpSketchParser", "cannot use exponent with period");
				if (l > 0) v.put(w);
				var n = s[i+1];
				var result = Ints.parseDecimal(s, i+1);
				if (result.0 <= 0) System.error("FpSketchParser", "invalid exponent");
				var exp = result.1;
				var bi = FpSketch.new();
				bi.words = reverse(v.extract());
				bi.exp = exp;
				return bi;
			}
			_ => {
				if (l >= 8) System.error("FpSketchParser", "expected _");
				if (!Chars.isHex(ch)) System.error("FpSketchParser", "expected hex char");
				w = w << 4 | u32.!(Chars.hexValue(ch));
				l++;
			}
		}
	}
	if (l > 0) v.put(w);

	var bi = FpSketch.new();
	bi.exp = if (p >= 0, p - v.length);
	bi.words = reverse(v.extract());
	return bi;
}

def l2a(v: u64) -> Array<u32> {
	return [u32.view(v), u32.view(v >> 32)];
}

// So that all test cases can be written in big-endian.
def reverse(v: Array<u32>) -> Array<u32> {
	var l = v.length, r = Array<u32>.new(l);
	for (i < l) r[i] = v[l - i - 1];
	return r;
}

def BIrev(v: Array<u32>) -> FpSketch {
	var bi = FpSketch.new();
	bi.words = reverse(v);
	return bi;
}

def BI(v: Array<u32>) -> FpSketch {
	var bi = FpSketch.new();
	bi.words = Arrays.dup(v);
	return bi;
}

def test_parser(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_bi = t.assert_bi;
	assert_bi([0x56000005], bf("56000005"));
	assert_bi(reverse([0x56aA0cC5, 0xf]), bf("56aA0cC5_f"));
	assert_bi(reverse([0x56aA0cC5, 0xABCDEF01]), bf("56aA0cC5_ABCDEF01."));
	assert_bi(reverse([0x56aA0cC5, 0x12345678, 0xabcdef01]), bf("56aA0cC5.12345678_ABCDEF01"));
}

def test_mulAdd32(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_bf = t.assert_bf, assert_bi = t.assert_bi;
	var bi = FpSketch.new();
	assert_bi([1], bi.addDecDigit(1));
	assert_bi([12], bi.addDecDigit(2));
	assert_bi([126], bi.addDecDigit(6));
	assert_bi([126000], bi.mulPow10(3));
	assert_bi([126000000], bi.mulPow10(3));
	assert_bi([756000005], bi.mulAdd32(6, 5));

	bi = FpSketch.new().addDecDigit(3);
	assert_bi([3000000000u], bi.mulPow10(9));
	assert_bi(l2a(30000000007u), bi.addDecDigit(7));
	assert_bi(l2a(300000000073u), bi.addDecDigit(3));
	assert_bi(l2a(3000000000734u), bi.addDecDigit(4));
	assert_bi(l2a(3000000000734000u), bi.mulPow10(3));
	assert_bi(l2a(30000000007340001u), bi.addDecDigit(1));
	assert_bi(l2a(300000000073400012u), bi.addDecDigit(2));
	assert_bi(l2a(3000000000734000123u), bi.addDecDigit(3));

	assert_bf(bf(  "1_A055690F_533787D2"), bi.addDecDigit(4));
	assert_bf(bf( "10_43561A99_402B4E39"), bi.addDecDigit(5));
	assert_bf(bf( "A2_A15D09FC_81B10E40"), bi.addDecDigit(6));
	assert_bf(bf("65A_4DA263DD_10EA8E87"), bi.addDecDigit(7));

	assert_bf(bf("2270_35277520_F3605961_0CDD6382_1D700000"), bi.mulPow10(20));
}

def test_addPow2(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_bf = t.assert_bf, assert_bi = t.assert_bi;
	var bi = bf("10000000_00000000_00000000_00000000");

	assert_bf(bf("10000000_00000000_00000000_00000001"), bi.addPow2(0));
	assert_bf(bf("10000000_00000000_00000000_00000002"), bi.addPow2(0));
	assert_bf(bf("10000000_00000000_00000000_00000003"), bi.addPow2(0));
	assert_bf(bf("10000000_00000000_00000000_00000013"), bi.addPow2(4));

	assert_bf(bf("10000000_00000000_00000000_40000013"), bi.addPow2(30));
	assert_bf(bf("10000000_00000000_00000000_C0000013"), bi.addPow2(31));
	assert_bf(bf("10000000_00000000_00000000_E0000013"), bi.addPow2(29));
	assert_bf(bf("10000000_00000000_00000000_F0000013"), bi.addPow2(28));
	assert_bf(bf("10000000_00000000_00000001_10000013"), bi.addPow2(29));

	assert_bf(bf("10000000_00000000_00000002_10000013"), bi.addPow2(32));
	assert_bf(bf("10000000_00000000_00000003_10000013"), bi.addPow2(32));

	assert_bf(bf("10000000_00000010_00000003_10000013"), bi.addPow2(68));
	assert_bf(bf("10000000_00000110_00000003_10000013"), bi.addPow2(72));

	assert_bf(bf("10000000_10000110_00000003_10000013"), bi.addPow2(92));
	assert_bf(bf("10000008_10000110_00000003_10000013"), bi.addPow2(99));
	assert_bf(bf("90000008_10000110_00000003_10000013"), bi.addPow2(127));

	assert_bf(bf("00000001_10000008_10000110_00000003_10000013"), bi.addPow2(127));
	assert_bf(bf("00000001_90000008_10000110_00000003_10000013"), bi.addPow2(127));
	assert_bf(bf("00000002_10000008_10000110_00000003_10000013"), bi.addPow2(127));
}

def test_highestOneBit(r: LibTest) {
	var t = FpSketchTester.new(r);
	def EQ = t.t.asserteq<int>;
	EQ(-1, bf("00000000").highestOneBit());
	EQ( 0, bf("00000001").highestOneBit());
	EQ( 1, bf("00000002").highestOneBit());
	EQ(21, bf("00300010").highestOneBit());
	EQ(30, bf("40300010").highestOneBit());
	EQ(31, bf("80000000").highestOneBit());
	EQ(31, bf("80000001").highestOneBit());
	EQ(31, bf("C0000000").highestOneBit());
	EQ(32, bf("00000001_40310010").highestOneBit());
	EQ(33, bf("00000003_40302010").highestOneBit());
	EQ(40, bf("000001D3_4030A010").highestOneBit());
	EQ(56, bf("01000003_40300010").highestOneBit());
	EQ(63, bf("F0000003_4F300010").highestOneBit());
	EQ(64, bf("00000001_F0000003_4F300010").highestOneBit());
	EQ(65, bf("00000002_F0000003_4F300010").highestOneBit());
}

def test_round(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_bf = t.assert_bf, assert_bi = t.assert_bi;
	{ // no-op case #1
		var input = reverse([0x10000000u, 0x00000000u, 0x00000000u]);
		for (width = 1; width < 100; width++) {
			assert_bi(input, BI(input).round(width));
		}
	}
	{ // no-op case #2
		var input = reverse([0xF0000000u, 0x00000000u, 0x00000000u]);
		for (width = 4; width < 100; width++) {
			assert_bi(input, BI(input).round(width));
		}
	}
	{ // no-op case #3
		var input = reverse([0xF0C23004u, 0xF0000000u, 0x00000000u]);
		for (width = 36; width < 100; width++) {
			assert_bi(input, BI(input).round(width));
		}
	}
	{ // single-word case #1
		for (width = 1; width <= 16; width++) {
			assert_bi([0x80000000], BI([0x80000001]).round(width));
			assert_bi([0x80000000], BI([0x80000010]).round(width));
			assert_bi([0x80000000], BI([0x80000100]).round(width));
			assert_bi([0x80000000], BI([0x80001000]).round(width));

			assert_bi([0x40000000], BI([0x40000001]).round(width));
			assert_bi([0x20000000], BI([0x20000001]).round(width));
			assert_bi([0x10000000], BI([0x10000001]).round(width));
			assert_bi([0x08000000], BI([0x08000001]).round(width));
			assert_bi([0x04000000], BI([0x04000001]).round(width));
			assert_bi([0x02000000], BI([0x02000001]).round(width));
			assert_bi([0x01000000], BI([0x01000001]).round(width));
			assert_bi([0x00100000], BI([0x00100001]).round(width));
			assert_bi([0x00010000], BI([0x00010001]).round(width));
			assert_bi([0x00001000], BI([0x00001000]).round(width));
		}
	}
	{ // round up / down / ties cases
		assert_bi([0x000000E0], BI([0x000000E1]).round(4));
		assert_bi([0x000000E0], BI([0x000000E2]).round(4));
		assert_bi([0x000000E0], BI([0x000000E4]).round(4));
		assert_bi([0x000000E0], BI([0x000000E8]).round(4));
		assert_bi([0x000000F0], BI([0x000000E9]).round(4));

		assert_bi([0x000000F0], BI([0x000000F1]).round(4));
		assert_bi([0x000000F0], BI([0x000000F2]).round(4));
		assert_bi([0x000000F0], BI([0x000000F4]).round(4));
		assert_bi([0x00000100], BI([0x000000F8]).round(4));
		assert_bi([0x00000100], BI([0x000000F9]).round(4));

	}
	{ // round up / down / ties cases
		assert_bi([0xFE000000], BI([0xFE100000]).round(8));
		assert_bi([0xFE000000], BI([0xFE200000]).round(8));
		assert_bi([0xFE000000], BI([0xFE400000]).round(8));
		assert_bi([0xFE000000], BI([0xFE800000]).round(8));
		assert_bi([0xFF000000], BI([0xFE900000]).round(8));
		assert_bi([0xFF000000], BI([0xFE800001]).round(8));

		assert_bi([0xFFF00000], BI([0xFFF10000]).round(12));
		assert_bi([0xFFF00000], BI([0xFFF20000]).round(12));
		assert_bi([0xFFF00000], BI([0xFFF40000]).round(12));
		assert_bi(reverse([0x00000001, 0x00000000]), BI([0xFFF80000]).round(12));
		assert_bi(reverse([0x00000001, 0x00000000]), BI([0xFFF90000]).round(12));
	}
	{ // round up / down / ties cases (cross word)
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE10000").round(16));
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE20000").round(16));
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE40000").round(16));
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE80000").round(16));
		assert_bf(bf("0000000F_EFF00000"), bf("0000000F_EFE90000").round(16));

		assert_bf(bf("000000FF_EFF00000"), bf("000000FF_EFF10000").round(20));
		assert_bf(bf("000000FF_EFF00000"), bf("000000FF_EFF20000").round(20));
		assert_bf(bf("000000FF_EFF00000"), bf("000000FF_EFF40000").round(20));
		assert_bf(bf("000000FF_F0000000"), bf("000000FF_EFF80000").round(20));
		assert_bf(bf("000000FF_F0000000"), bf("000000FF_EFF90000").round(20));
		assert_bf(bf("000000FF_F0000000"), bf("000000FF_EFF80001").round(20));
	}
	{ // round up / down / ties cases (cross word)
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE10000").round(16));
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE20000").round(16));
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE40000").round(16));
		assert_bf(bf("0000000F_EFE00000"), bf("0000000F_EFE80000").round(16));
		assert_bf(bf("0000000F_EFF00000"), bf("0000000F_EFE90000").round(16));

		assert_bf(bf("000000F1_EFF00000"), bf("000000F1_EFF10000").round(20));
		assert_bf(bf("000000F2_EFF00000"), bf("000000F2_EFF20000").round(20));
		assert_bf(bf("000000F3_EFF00000"), bf("000000F3_EFF40000").round(20));
		assert_bf(bf("000000F4_F0000000"), bf("000000F4_EFF80000").round(20));
		assert_bf(bf("000000F5_F0000000"), bf("000000F5_EFF90000").round(20));
		assert_bf(bf("000000F6_F0000000"), bf("000000F6_EFF80001").round(20));
	}
	{ // round up / down / ties cases (cross word)
		assert_bf(bf("8100000F_EFE00000_00000000"), bf("8100000F_EFE10000_00300000").round(44));
		assert_bf(bf("8200000F_EFE00000_00000000"), bf("8200000F_EFE20000_00030000").round(44));
		assert_bf(bf("8300000F_EFE00000_00000000"), bf("8300000F_EFE40000_00003000").round(44));
		assert_bf(bf("8400000F_EFE00000_00000000"), bf("8400000F_EFE80000_00000000").round(44));
		assert_bf(bf("8500000F_EFF00000_00000000"), bf("8500000F_EFE80000_00000001").round(44));
		assert_bf(bf("8600000F_EFF00000_00000000"), bf("8600000F_EFE90000_00000030").round(44));
		assert_bf(bf("8700000F_EFF00000_00000000"), bf("8700000F_EFE90000_00000003").round(44));
		assert_bf(bf("8800000F_EFF00000_00000000"), bf("8800000F_EFE90000_00000000").round(44));

		assert_bf(bf("090000FF_FFF00000_00000000"), bf("090000FF_FFF10000_00000000").round(40));
		assert_bf(bf("090000FF_FFF00000_00000000"), bf("090000FF_FFF20000_00000000").round(40));
		assert_bf(bf("090000FF_FFF00000_00000000"), bf("090000FF_FFF40000_00000000").round(40));
		assert_bf(bf("09000100_00000000_00000000"), bf("090000FF_FFF80000_00000000").round(40));
		assert_bf(bf("09000100_00000000_00000000"), bf("090000FF_FFF80000_00000001").round(40));
		assert_bf(bf("09000100_00000000_00000000"), bf("090000FF_FFF90000_00000000").round(40));
		assert_bf(bf("09000100_00000000_00000000"), bf("090000FF_FFF80001_00000000").round(40));
	}
	{ // round up / down / ties cases (cross word)
		assert_bf(bf("0100000E_00000000"), bf("0100000E_10000000").round(25));
		assert_bf(bf("0100000E_00000000"), bf("0100000E_20000000").round(25));
		assert_bf(bf("0100000E_00000000"), bf("0100000E_40000000").round(25));
		assert_bf(bf("0100000E_00000000"), bf("0100000E_80000000").round(25));
		assert_bf(bf("0100000F_00000000"), bf("0100000E_80000002").round(25));
		assert_bf(bf("0100000F_00000000"), bf("0100000E_90000000").round(25));

		assert_bf(bf("0100000E_00000000_00000000_00000000"), bf("0100000E_00000000_00000000_10000000").round(89));
		assert_bf(bf("0100000E_00000000_00000000_00000000"), bf("0100000E_00000000_00000000_20000000").round(89));
		assert_bf(bf("0100000E_00000000_00000000_00000000"), bf("0100000E_00000000_00000000_40000000").round(89));
		assert_bf(bf("0100000E_00000000_00000000_00000000"), bf("0100000E_00000000_00000000_80000000").round(89));
		assert_bf(bf("0100000E_00000000_00000001_00000000"), bf("0100000E_00000000_00000000_80000002").round(89));
		assert_bf(bf("0100000E_00000000_00000001_00000000"), bf("0100000E_00000000_00000000_90000000").round(89));

		assert_bf(bf("0100000E_00000000_00000000_00000000"), bf("0100000E_00000000_00000000_10000000").round(89));
		assert_bf(bf("0100000E_00000000_00000000_00000000"), bf("0100000E_00000000_00000000_20000000").round(89));
		assert_bf(bf("0100000E_00000000_00000000_00000000"), bf("0100000E_00000000_00000000_40000000").round(89));
		assert_bf(bf("0100000E_00000000_00000002_00000000"), bf("0100000E_00000000_00000001_80000000").round(89));
		assert_bf(bf("0100000E_00000000_00000002_00000000"), bf("0100000E_00000000_00000001_80000002").round(89));
		assert_bf(bf("0100000E_00000000_00000002_00000000"), bf("0100000E_00000000_00000001_90000000").round(89));

	}
}

def test_divu32(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_bf = t.assert_bf, assert_bi = t.assert_bi, assert_div = t.assert_div;
	{
		// Simple u32 / u32 cases.
		def num = [0xFFFFFFFFu, 0xAAAAAAAAu, 0x11111111u, 0x00999999u, 0x00007777u, 0x00000033u, 0x00000005u, 1u, 0u];
		def denom = [0xFFFFFFFFu, 0xcAcAcAcAu, 0x10101010u, 0x00989898u, 0x00006666u, 0x00000022u, 5u, 1u];
		var bi = FpSketch.new();
		var words1 = [0u], words2 = [0u];
		for (n in num) {
			for (d in denom) {
				bi.words = words1;
				words1[0] = n;
				words2[0] = n / d;
				var gotx = bi.divU32(d, 0);
				assert_bi(words2, bi);
				t.t.asserteq((n % d) == 0, gotx);
			}
		}
	}
	{
		// Simple u64 / u32 cases.
		def num = [
			0xFFFFFFFFFFFFFFFFuL,
			0xAAAAAAAAFFFFFFFFuL,
			0x1111111120202020uL,
			0xAccAAcAcFFdFFdFFuL,
			0x1313131120202060uL,
			0xFFFFFFFFuL,
			0xAAAAAAAAuL,
			0x11111111uL,
			0x00999999uL,
			0x00007777uL,
			0x00000033uL,
			0x00000005uL,
			1uL,
			0uL
		];
		def denom = [0xFFFFFFFFu, 0xcAcAcAcAu, 0x10101010u, 0x00989898u, 0x00006666u, 0x00000022u, 5u, 1u];
		var bi = FpSketch.new();
		var words1 = [0u, 0u], words2 = [0u, 0u];
		for (n in num) {
			for (d in denom) {
				bi.words = words1;
				words1[0] = u32.view(n);
				words1[1] = u32.view(n >> 32);
				var q = n / d;
				words2[0] = u32.view(q);
				words2[1] = u32.view(q >> 32);
				var gotx = bi.divU32(d, 0);
				assert_bi(words2, bi);
				t.t.asserteq((n % d) == 0, gotx);
			}
		}
	}
	{
		// N / u32 exact integer cases.
		assert_div(                  "9D",  true,                          "355B",       "57", 0);
		assert_div(                  "5A",  true,                          "32A0",       "90", 0);
		assert_div(                  "BE",  true,                          "4092",       "57", 0);
		assert_div(                  "F5",  true,                        "3A7424",     "3D14", 0);
		assert_div(                  "A3",  true,                        "61FE15",     "99E7", 0);
		assert_div(                  "B9",  true,                        "1DD224",     "2944", 0);
		assert_div(                  "E0",  true,                      "5A341820",   "6716F7", 0);
		assert_div(                  "32",  true,                      "29CBECDC",   "D5FF9E", 0);
		assert_div(                  "86",  true,                      "44F8629C",   "83C39A", 0);
		assert_div(                   "2",  true,                    "1_86CE1C9C", "C3670E4E", 0);
		assert_div(                  "41",  true,                    "9_0299DAD5", "237C7595", 0);
		assert_div(                  "F0",  true,                   "E3_DFD43EB0", "F310E265", 0);
		assert_div(                "C5BA",  true,                        "55BBA6",       "6F", 0);
		assert_div(                "FCBA",  true,                        "6A9E78",       "6C", 0);
		assert_div(                "7CAB",  true,                         "E9C0A",       "1E", 0);
		assert_div(                "5BB8",  true,                      "208BB788",     "5AD7", 0);
		assert_div(                "6290",  true,                      "1326B6E0",     "31BE", 0);
		assert_div(                "4EC4",  true,                      "49FDE6F0",     "F07C", 0);
		assert_div(                "3C9D",  true,                    "F_0237779B",   "3F6397", 0);
		assert_div(                "D798",  true,                   "A1_EBE2B3A0",   "C044BC", 0);
		assert_div(                "A55D",  true,                   "90_3C53A81C",   "DF4ACC", 0);
		assert_div(                "E44F",  true,                 "72E0_4D90492A", "80CF37B6", 0);
		assert_div(                "82AE",  true,                 "7625_B4911D92", "E772FCDF", 0);
		assert_div(                "5923",  true,                 "2B8C_61E70780", "7D121280", 0);
		assert_div(              "6B15C8",  true,                       "933DF30",       "16", 0);
		assert_div(              "D8D356",  true,                      "8420C868",       "9C", 0);
		assert_div(              "DA9CF5",  true,                        "DA9CF5",        "1", 0);
		assert_div(              "637251",  true,                   "1E_30DC8738",     "4DB8", 0);
		assert_div(              "3963A0",  true,                   "21_9A18DA80",     "95E4", 0);
		assert_div(              "8BD668",  true,                   "82_CD9FEBF0",     "EF76", 0);
		assert_div(              "897FFA",  true,                  "F5C_1EDD6A9C",   "1C98E6", 0);
		assert_div(              "D1F797",  true,                 "4DB0_7ED1AA47",   "5EB8D1", 0);
		assert_div(              "F1E605",  true,                 "9CDB_7B56F7BD",   "A60059", 0);
		assert_div(              "B22B7C",  true,               "8B4FBE_37AD372C", "C82AC695", 0);
		assert_div(              "DAC4E8",  true,               "426BAF_01180430", "4DB96CBE", 0);
		assert_div(              "50D25A",  true,               "237627_B1F06CD0", "7052C108", 0);
		assert_div(            "11229D09",  true,                    "C_8448B593",       "BB", 0);
		assert_div(            "16D30B88",  true,                    "A_F7668A58",       "7B", 0);
		assert_div(            "5EA359C5",  true,                    "2_37D41A9E",        "6", 0);
		assert_div(            "BCF1A032",  true,                 "327E_6A999CB4",     "446A", 0);
		assert_div(            "EEB1D8C1",  true,                 "4C01_5948D484",     "5184", 0);
		assert_div(            "3C7E4857",  true,                  "BFF_374EA8F3",     "32C5", 0);
		assert_div(            "2D51FB2A",  true,               "106A46_4319AB9A",   "5CB959", 0);
		assert_div(            "C7015B39",  true,               "B97C13_07C9489A",   "EE9B6A", 0);
		assert_div(            "C0073541",  true,               "97EAE1_D1B248E8",   "CA86E8", 0);
		assert_div(            "64D61C8B",  true,              "8E68D20_7B0A7381", "1698B5A3", 0);
		assert_div(            "C2060A14",  true,              "65DEB3C_E0AEFB98",  "8668F2E", 0);
		assert_div(            "5917E810",  true,             "4DBDB4CF_4FFA44F0", "DF615ACF", 0);
		assert_div(         "D6_8ADC847E",  true,                 "3248_8BAF0D88",       "3C", 0);
		assert_div(         "1E_7B847A06",  true,                  "CDC_1BE37A88",       "6C", 0);
		assert_div(         "35_AAA7F913",  true,                 "22CC_A8EB8252",       "A6", 0);
		assert_div(         "DC_F1C00597",  true,               "314D71_F93F51E0",     "3920", 0);
		assert_div(         "8F_856DEE8F",  true,               "7C6840_D291A498",     "DDE8", 0);
		assert_div(         "DC_6A765A92",  true,               "3CEDDD_DF6143C8",     "46C4", 0);
		assert_div(         "BD_B5C34F11",  true,             "1EE4AFC6_DBC0BF74",   "29B034", 0);
		assert_div(         "8E_270DF7C4",  true,             "7AD4287D_5EAC36A4",   "DD3339", 0);
		assert_div(         "20_BE41533C",  true,             "10FAD338_E0D8EB84",   "84C14F", 0);
		assert_div(         "26_52BD5FBC",  true,           "A_AB1AC3E5_4006ECB8", "4743D9B2", 0);
		assert_div(         "58_4E33290E",  true,          "53_2BA044DC_B1A480A4", "F11D039E", 0);
		assert_div(          "7_688F6E7A",  true,           "3_464AA951_FC69311C", "712753A6", 0);
		assert_div(       "958E_85815370",  true,               "77C320_E88FD0B0",       "CD", 0);
		assert_div(       "53C5_3D41489A",  true,               "2A8A29_1B26DE34",       "82", 0);
		assert_div(       "B174_5B7ED1F4",  true,               "3FC5D0_E19373B0",       "5C", 0);
		assert_div(       "3634_C3278904",  true,              "3E43FB6_B99D3284",     "1261", 0);
		assert_div(       "7321_6D7D6404",  true,             "162EB9CB_7FCC314C",     "3153", 0);
		assert_div(       "92F0_BD81AF59",  true,             "47758138_D4451927",     "7C7F", 0);
		assert_div(       "42A4_18962C65",  true,          "2F_9176D848_E136C2BD",   "B6BB79", 0);
		assert_div(       "7865_6499ECC9",  true,          "55_FE211DB9_D99AC113",   "B6D8FB", 0);
		assert_div(       "664F_040864F4",  true,          "4F_6DBECDC3_5E55C300",   "C6BFC0", 0);
		assert_div(       "CDC5_B6528D52",  true,        "3EA2_C2AC4315_50ADCF4E", "4DECBDCF", 0);
		assert_div(       "7747_92EEAF19",  true,         "622_D0AADEEB_924C9D1E",  "D2B4FCE", 0);
		assert_div(       "5BE0_05CA8BA4",  true,        "4840_D80E94F2_CCB250C0", "C95374B0", 0);
		assert_div(     "16D39E_F92601FC",  true,              "48C28AB_A2926534",       "33", 0);
		assert_div(     "23EB72_7724B782",  true,             "15E379C0_9A5FD338",       "9C", 0);
		assert_div(     "4D5760_518CC77F",  true,             "40A70A84_2BAEC42A",       "D6", 0);
		assert_div(     "A403DE_DE98C3FC",  true,          "1D_118B9CD5_75240684",     "2D5F", 0);
		assert_div(     "66BA94_3D44A93A",  true,          "16_288EA997_27607AB0",     "3738", 0);
		assert_div(     "A34181_53BC62C8",  true,          "8F_300BF5F9_52837A40",     "E088", 0);
		assert_div(     "10938A_A064F428",  true,         "13C_6B6DD41F_B1C03FA8",   "1316B1", 0);
		assert_div(      "D3D90_671482A1",  true,         "3B2_E9395959_BAC5FF8F",   "47842F", 0);
		assert_div(     "49B569_FD3995C8",  true,        "3E64_F1A75CDA_63F65E60",   "D8B42C", 0);
		assert_div(     "4C0B38_15D76022",  true,      "358789_1FAD900B_8403BC64", "B434AD12", 0);
		assert_div(     "C72393_466275CA",  true,      "596A65_37B0C6DE_48459306", "72F26447", 0);
		assert_div(     "AA50AA_EBDC5B4E",  true,      "906CAC_4436B227_2924DFB0", "D9157C68", 0);
		assert_div(   "CE0F0CF1_194DC73D",  true,          "BD_F5DFEE43_53B3AC3C",       "EC", 0);
		assert_div(   "77B24C9F_2A46D951",  true,          "31_18216D48_570F2239",       "69", 0);
		assert_div(   "4D608A4A_3C37973A",  true,          "23_0FBEA9A3_49308648",       "74", 0);
		assert_div(   "421B0341_B27D8E65",  true,        "1429_A73548C5_E5AF7449",     "4E15", 0);
		assert_div(   "E34571B6_F15080D1",  true,        "B61C_CB489989_83D878C2",     "CD22", 0);
		assert_div(   "E761DAA8_B060BA8E",  true,        "89D8_80E70D0B_B043C6AA",     "9883", 0);
		assert_div(   "CAEFD895_E0B35102",  true,      "684D5D_B6FAF71B_62A79742",   "839321", 0);
		assert_div(   "22310132_49BBED02",  true,       "CC7BC_5A9053EE_585924A8",   "5FB054", 0);
		assert_div(   "48DD6ADF_2EB37328",  true,      "3C3BA0_BA755A44_EFFB7680",   "D39E90", 0);
		assert_div(    "5D78FF5_4E8920AA",  true,     "56032BB_12551FE3_1D04F562", "EB916CED", 0);
		assert_div(   "59581418_CC64EA78",  true,     "3FDA28F_B91A8B74_79344008",  "B6F51AF", 0);
		assert_div(   "C6A0F932_F8E217AE",  true,    "4C66D16D_2E7D5A04_A770EE50", "62781D18", 0);
		assert_div("F4_1B42C670_86B3E5F8",  true,        "6513_49A62A97_C67D38B0",       "6A", 0);
		assert_div("7E_837E6A8A_73046155",  true,        "5403_51F2BFF0_60E8A272",       "AA", 0);
		assert_div("C8_D3038572_0A5C70D4",  true,        "5EEB_BCAA12E6_E5B15434",       "79", 0);
		assert_div("D7_10DF934D_85337A96",  true,      "C8C712_98C638C0_050B14D4",     "EEFE", 0);
		assert_div("85_D5B289A4_066B1EF0",  true,      "2E79B3_5DB80B92_96E04BA0",     "58E6", 0);
		assert_div("41_D88A2598_5B29B969",  true,      "2A93CD_EC29514A_ADD4E631",     "A589", 0);
		assert_div("C8_6D63EF23_5768D7D3",  true,    "8C824770_D5821C1A_4C681124",   "B377CC", 0);
		assert_div("72_7D034D84_DE3BF08E",  true,     "B723C12_345D1256_63409F88",   "19981C", 0);
		assert_div("5C_631774BA_3788D8D0",  true,    "35996023_712A0885_531A4400",   "948540", 0);
		assert_div("5D_5FD49394_09B7C5F3",  true, "46_266217AF_F2E444B1_BBADC47A", "C053A61E", 0);
		assert_div("5F_0137774C_CFAEC280",  true, "15_6FDB9B1F_A5AB153B_CC703680", "39C397C9", 0);
		assert_div("6C_D58430AC_5B02E147",  true, "11_5BFA18C1_8F3FEDFC_BF09F0FC", "28D52524", 0);
	}
	{ // N / u32 inexact cases.
		assert_div(              "D55EB7_18C54C43", false,             "C808CBA7_38F77FAD",         "F0", 0);
		assert_div(              "D56406_B2283E4B", false,             "132BFC9A_019D98C6",         "17", 0);
		assert_div(             "19D8C8B_885637C4", false,             "559E18E3_39D98BAB",         "35", 0);
		assert_div(                "7059_D2E97AAF", false,             "588E4CC6_17BBD995",       "C9C8", 0);
		assert_div(                "6ECA_EA74C5A7", false,             "2089C9F1_41585CB5",       "4B2F", 0);
		assert_div(                 "CD0_E6A376C8", false,              "4C3863A_B29F0803",       "5F28", 0);
		assert_div(                 "1A5_B79C2F68", false,             "DF9693B9_354AFFD9",     "87BA36", 0);
		assert_div(                 "209_BA919AA9", false,             "80D2D280_A8050BAC",     "3F35EE", 0);
		assert_div(                 "328_37E499C1", false,             "8AD73E5D_54A0DF11",     "2BFA2F", 0);
		assert_div(                   "1_69A36FDD", false,             "46DDC012_4D58F5B0",   "322A5A31", 0);
		assert_div(                     "7040A478", false,             "508BC2CA_F4D270E7",   "B7B0DCB7", 0);
		assert_div(                     "FEF6764B", false,             "A6868A44_D75F711D",   "A733F902", 0);
		assert_div(          "1_98D11573_C6207E4D", false,          "2B_1E0D4335_E56D5233",         "1B", 0);
		assert_div(          "1_0E220662_5EB2EC64", false,          "D7_431D1663_76945FDA",         "CC", 0);
		assert_div(            "71E8D1FD_4A33692D", false,          "56_C457F3EF_85291D77",         "C3", 0);
		assert_div(             "10C4AF4_D9A27933", false,          "A8_4C0CF37D_10F3172A",       "A096", 0);
		assert_div(             "3FAC4EF_1C1BFFE4", false,          "C8_44C48D03_950E8356",       "3253", 0);
		assert_div(             "3C7D359_88B2BB71", false,          "F7_58BEB8D4_95B1B567",       "416D", 0);
		assert_div(                "A1E4_E19B4CCA", false,          "8F_2A235904_41F085F6",     "E2622A", 0);
		assert_div(                "5EC4_D157F739", false,          "5B_FEB6C202_02357401",     "F881CA", 0);
		assert_div(                "72BE_84A7B1AC", false,          "5B_A5A31535_84D6DE4E",     "CC7812", 0);
		assert_div(                  "C9_8AD35CBF", false,          "A9_632061A9_6A8C9CBE",   "D7280E33", 0);
		assert_div(                 "467_E243F470", false,          "CF_B119DA0B_04C04DD8",   "2F23FD2D", 0);
		assert_div(                  "55_D0ED7EDB", false,          "4D_16AA5D5B_CB6F441B",   "E5F6EC1E", 0);
		assert_div(        "1CC_E2D64F9D_5D7B1B92", false,        "3D36_207692E6_6A59A969",         "22", 0);
		assert_div(        "1AB_A39E0FA6_5D63FFCD", false,        "D5D1_CF07D32E_B1FFE6D7",         "80", 0);
		assert_div(         "A9_388D9800_44AF3333", false,        "5349_D5B0D021_CE3B3391",         "7E", 0);
		assert_div(            "A7E10B52_B62B457D", false,        "953B_A381C161_8D210EAF",       "E391", 0);
		assert_div(            "7E06D36F_9E7C20E0", false,        "739E_0D1AE75A_0A3D0C67",       "EADB", 0);
		assert_div(          "3_02AD6A96_566C4083", false,        "D4D9_4D140D56_5DC148DD",       "46B4", 0);
		assert_div(              "EF8FC5_8A41A2C4", false,        "9239_75E6A829_120920CF",     "9C4218", 0);
		assert_div(              "ABE140_EFD3476B", false,        "94B3_FB83E10A_8E9FDF19",     "DD7AEA", 0);
		assert_div(              "EBDCE1_EE810903", false,        "1E78_8DCCB331_CD97A02D",     "21128A", 0);
		assert_div(               "27B9E_E945E769", false,        "9AB1_1FDA7BD3_0A512760",   "3E4D960D", 0);
		assert_div(               "182F3_82B95822", false,        "CF92_BAA86FF4_FF0BD87E",   "8953A1EC", 0);
		assert_div(                "3949_A75223C8", false,        "25E8_BC9E551A_64CFB91C",   "A96749DA", 0);
		assert_div(       "75BC_17532A57_4A298C72", false,      "5D5C26_7EF29337_CEF25E77",         "CB", 0);
		assert_div(       "1B7E_DEE42EAB_03590E6B", false,       "DDAEE_50FB842C_AFE0440E",         "81", 0);
		assert_div(      "48B0F_78986954_440D5902", false,      "EC3F24_7EF5651D_D2B61475",         "34", 0);
		assert_div(        "AAE_805E88FC_B0F401E4", false,      "A2CFC8_A0EBFB91_2734E032",        "F3E", 0);
		assert_div(         "5F_E48CB176_C16CDD67", false,      "2C3777_ABD85D42_7DBB02A7",       "760B", 0);
		assert_div(         "BB_805E5EDC_C0DFC7FB", false,      "B3894A_5C95202E_465C5AEF",       "F520", 0);
		assert_div(          "2_CC74546F_BD75D267", false,      "A69601_21386E4F_015AE0FB",     "3B8610", 0);
		assert_div(          "1_65C26D4C_34140892", false,      "95C0A6_7085AC00_D166BC77",     "6B2859", 0);
		assert_div(            "2CF2B53B_F437E360", false,       "FC479_B32F1B1F_E6728D51",     "59CD96", 0);
		assert_div(              "97371B_9E105269", false,      "5AB24F_B85034E1_054DCBCD",   "998B754F", 0);
		assert_div(             "B49B73E_6E9B0318", false,      "EA7663_8095EA3B_3F4D4943",   "14C56291", 0);
		assert_div(             "202E0C0_E579E616", false,      "E831CE_70EE31C9_776E0409",   "7372C6BC", 0);
		assert_div(    "14E7499_966B80EF_BF9B7D5B", false,    "CA8098FE_13171129_0324E698",         "9B", 0);
		assert_div(    "107B2C9_DD4212FA_C7389FE8", false,    "492295FC_5D53438D_40B45999",         "47", 0);
		assert_div(    "58DE617_C969E4C2_65BBF920", false,    "7FBFAC23_18838D77_23E361F6",         "17", 0);
		assert_div(      "2BD61_536298FD_B5E505C5", false,    "7FBDD9CF_D51D3540_D62D1DFF",       "2EA0", 0);
		assert_div(        "37C_3778AD1D_01CE9F12", false,     "2CF777F_28A06708_0C97FF35",       "CE6F", 0);
		assert_div(      "17547_5A16751C_1EE565F4", false,    "E88934F4_E1704697_33A59487",       "9F7A", 0);
		assert_div(        "144_58E79938_E7CF7B83", false,    "4162C1BE_4955D679_9186E7E4",     "339B86", 0);
		assert_div(        "111_E196639D_70973E94", false,    "6A869542_2241F339_D9EF47D1",     "639223", 0);
		assert_div(         "47_C087E678_3DF68BC6", false,    "2FADC9BA_13865213_264B8E05",     "AA1C50", 0);
		assert_div(          "1_740959A1_828F4549", false,    "9143CB79_347F342E_082852A5",   "63F5169D", 0);
		assert_div(            "73385F0F_77709BB3", false,    "3422F0EC_45D0FB73_845EAD5C",   "73D6AB4C", 0);
		assert_div(            "FC5C4050_09C6D353", false,    "B9237CFB_57988284_2348A096",   "BBCF0B93", 0);
		assert_div( "1_975B7C06_867DC24B_ABC22F9A", false, "1F_D325B082_81D32DE9_6B2BB811",         "14", 0);
		assert_div( "1_529EAD3D_99417E58_934BB0CA", false, "EE_1791CF4F_C20CD647_91384E95",         "B4", 0);
		assert_div( "3_95018EFA_13A92E42_2B5E2DB0", false, "32_2615D1AD_1340879E_5F267FAC",          "E", 0);
		assert_div(    "10A8E90_E5960FAA_F12AB928", false, "B9_309A24B1_283497FA_D9918DE6",       "B1DB", 0);
		assert_div(    "2FB890B_69FE299B_98176CBE", false, "FA_7D099A99_BDAE6779_4F50CE44",       "53FC", 0);
		assert_div(    "271763D_4A5125DB_A3CBF921", false, "C3_79D613B3_F076EEE7_0572596D",       "5002", 0);
		assert_div(       "F699_00A1039A_26AAEEE1", false, "AE_AC2D122D_164FF8F6_7C4E8CC3",     "B55520", 0);
		assert_div(      "3F194_0795175E_6F386E79", false, "F5_B5B409AB_8F4F2B74_E6B76A56",     "3E4E10", 0);
		assert_div(       "3C91_A260A85D_D2A01986", false, "14_44C1FF6C_68F624DC_0D53DA48",     "55AAC4", 0);
		assert_div(         "CC_3F18B4C1_BDCF27F1", false, "85_61D75D7C_6109366C_3822AB53",   "A72DF99F", 0);
		assert_div(         "62_8D00709A_F171F1C1", false, "42_349D4B75_DFC8377D_F3DAB656",   "ABFA7D7A", 0);
		assert_div(         "26_9D7C7A10_11C9DFED", false, "21_FD0FEF4F_AFE89788_CCCE0B57",   "E153D745", 0);
	}
	{ // boundary cases for / u32
		assert_div(                "FFFF_FFFFFF39",  true,               "D8FFFF_FFFF5751",         "D9", 0);
		assert_div(                "FFFF_FFFFFF05",  true,                "FFFFF_FFFFF050",         "10", 0);
		assert_div(                "FFFF_FFFFFF7B",  true,               "A2FFFF_FFFFAB51",         "A3", 0);
		assert_div(                "FFFF_FFFFFF0E",  true,             "557EFFFF_FFAF2DF2",       "557F", 0);
		assert_div(                "FFFF_FFFFFF56",  true,             "50C2FFFF_FFCA5E82",       "50C3", 0);
		assert_div(                "FFFF_FFFFFF8E",  true,             "10D4FFFF_FFF88126",       "10D5", 0);
		assert_div(                "FFFF_FFFFFF97",  true,          "73_72EFFFFF_D0A5DB90",     "7372F0", 0);
		assert_div(                "FFFF_FFFFFF60",  true,          "F5_54C6FFFF_66AB03A0",     "F554C7", 0);
		assert_div(                "FFFF_FFFFFFF4",  true,          "58_105FFFFF_FBDF3B80",     "581060", 0);
		assert_div(                "FFFF_FFFFFF14",  true,         "3EB_3EFAFFFC_6321F09C",    "3EB3EFB", 0);
		assert_div(                "FFFF_FFFFFFE3",  true,        "AE86_8D18FFEC_3AC2042B",   "AE868D19", 0);
		assert_div(                "FFFF_FFFFFF7D",  true,        "AE1A_7D8EFFA6_E871BFD3",   "AE1A7D8F", 0);
		assert_div(              "FFFFFF_FFFFC153",  true,             "36FFFFFF_FFF288D5",         "37", 0);
		assert_div(              "FFFFFF_FFFF94C7",  true,             "D8FFFFFF_FFA51CAF",         "D9", 0);
		assert_div(              "FFFFFF_FFFFF004",  true,             "9CFFFFFF_FFF63274",         "9D", 0);
		assert_div(              "FFFFFF_FFFF025B",  true,          "C1_F6FFFFFF_3FD1E0CD",       "C1F7", 0);
		assert_div(              "FFFFFF_FFFF8C52",  true,          "2E_FCFFFFFF_EAC4690A",       "2EFD", 0);
		assert_div(              "FFFFFF_FFFFE079",  true,          "1F_1AFFFFFF_FC2B53C3",       "1F1B", 0);
		assert_div(              "FFFFFF_FFFF8DC2",  true,        "98E0_97FFFFBB_C6F5EB30",     "98E098", 0);
		assert_div(              "FFFFFF_FFFF6E8E",  true,        "6B60_8AFFFFC2_FE80471A",     "6B608B", 0);
		assert_div(              "FFFFFF_FFFF063E",  true,        "C6F4_67FFFF3D_E581A130",     "C6F468", 0);
		assert_div(              "FFFFFF_FFFF915E",  true,      "C6361D_90FFAA57_510CFC3E",   "C6361D91", 0);
		assert_div(              "FFFFFF_FFFFE8F9",  true,      "F2711F_A5FFEA31_35103876",   "F2711FA6", 0);
		assert_div(              "FFFFFF_FFFFB146",  true,       "88D73_EFFFFD5E_AFE6A3A0",    "88D73F0", 0);
		assert_div(            "FFFFFFFF_FF35C558",  true,          "DE_FFFFFFFF_4FD6E7A8",         "DF", 0);
		assert_div(            "FFFFFFFF_FF7AF5C6",  true,          "94_FFFFFFFF_B2910C3E",         "95", 0);
		assert_div(            "FFFFFFFF_FFD203EB",  true,          "BF_FFFFFFFF_DD82F040",         "C0", 0);
		assert_div(            "FFFFFFFF_FF26B8EE",  true,        "995E_FFFFFF7D_D3E4DE52",       "995F", 0);
		assert_div(            "FFFFFFFF_FF3626BB",  true,        "6BBD_FFFFFFAB_0C60E7CA",       "6BBE", 0);
		assert_div(            "FFFFFFFF_FF260BFC",  true,        "B679_FFFFFF64_A4A6DE18",       "B67A", 0);
		assert_div(            "FFFFFFFF_FF99BB5D",  true,      "D56AFE_FFFFAABE_261723A3",     "D56AFF", 0);
		assert_div(            "FFFFFFFF_FFBF756C",  true,      "F92F2C_FFFFC12D_514277FC",     "F92F2D", 0);
		assert_div(            "FFFFFFFF_FF625D9B",  true,      "5C9EA0_FFFFC6F7_F656887B",     "5C9EA1", 0);
		assert_div(            "FFFFFFFF_FFF38F3E",  true,    "4B4ACD95_FFFC5754_94569454",   "4B4ACD96", 0);
		assert_div(            "FFFFFFFF_FFC534A7",  true,    "8CB66C06_FFDFAEE5_F354E491",   "8CB66C07", 0);
		assert_div(            "FFFFFFFF_FF20F496",  true,    "B8DC548D_FF5EEFD4_5570E334",   "B8DC548E", 0);

	}
}

def test_divexp(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_bf = t.assert_bf, assert_bi = t.assert_bi, assert_div = t.assert_div;
	assert_div("1",                   true, "1", "1", 0);
	assert_div("1.00000000",          true, "1", "1", 1);
	assert_div("1.00000000_00000000", true, "1", "1", 2);

	assert_div(".1",                          true, "1", "1_00000000", 0);
	assert_div(".00000001_00000000",          true, "1", "1_00000000", 1);
	assert_div(".00000001_00000000_00000000", true, "1", "1_00000000", 2);

	assert_div(".1",                          true, ".1", "1", 0);
	assert_div(".00000001_00000000",          true, ".1", "1", 1);
	assert_div(".00000001_00000000_00000000", true, ".1", "1", 2);

	assert_div("1_00000000",                   true, "1_00000000", "1", 0);
	assert_div("1_00000000",                   true, "1_00000000", "1", 1);
	assert_div("1_00000000.00000000",          true, "1_00000000", "1", 2);
	assert_div("1_00000000.00000000_00000000", true, "1_00000000", "1", 3);

	assert_div("0",                   false, "1", "2", 0);
	assert_div("0.80000000",          true,  "1", "2", 1);
	assert_div("0.80000000_00000000", true,  "1", "2", 2);

	assert_div(".0",                          false, "1", "2_00000000", 0);
	assert_div(".00000000_80000000",          true,  "1", "2_00000000", 1);
	assert_div(".00000000_80000000_00000000", true,  "1", "2_00000000", 2);

	assert_div("1w1",                    true, "1", ".1", 0);
	assert_div("1_00000000",             true, "1", ".1", 1);
	assert_div("1_00000000_00000000w-1", true, "1", ".1", 2);

	assert_div("80000000w-2",	     true, "1", "2_00000000", 1);

	assert_div("00000000_0022BFFF_CA74D0B9_D106DC20_233DCB11_00000000w-6",
		false, "075BCD15", "00000036_35C9ADC5_DEA00000", 3);

}

def test_divu64(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_bf = t.assert_bf, assert_bi = t.assert_bi, assert_div = t.assert_div;
	{ // N / u64 with some exact fractional cases.
		assert_div(        ".AC",  true,                          "2A54",        "3F_00000000", 0);
		assert_div(         ".3",  true,                           "1BC",        "94_00000000", 0);
		assert_div(        ".1B",  true,                           "402",        "26_00000000", 0);
		assert_div(        ".9D",  true,                        "695F2D",      "ABD1_00000000", 0);
		assert_div(        ".37",  true,                        "18A7AE",      "72C2_00000000", 0);
		assert_div(        ".E2",  true,                        "6FA34A",      "7E75_00000000", 0);
		assert_div(        ".89",  true,                      "7AF63BC4",    "E5C4A4_00000000", 0);
		assert_div(        ".5E",  true,                       "3990560",     "9CC50_00000000", 0);
		assert_div(        ".4E",  true,                      "3E5BF6F6",    "CCAA8D_00000000", 0);
		assert_div(        ".F7",  true,                   "96_8E106966",  "9C0A6E4A_00000000", 1);
		assert_div(        ".8E",  true,                   "33_73DB7E90",  "5CC27278_00000000", 1);
		assert_div(        ".A7",  true,                   "85_49F672FC",  "CC52B8A4_00000000", 1);
		assert_div(      ".23CC",  true,                        "2070E0",        "E8_00000000", 0);
		assert_div(      ".71E5",  true,                         "B1F5D",        "19_00000000", 0);
		assert_div(      ".9EC5",  true,                        "44D76B",        "6F_00000000", 0);
		assert_div(      ".9361",  true,                      "471D5327",      "7B87_00000000", 0);
		assert_div(      ".1E39",  true,                       "F851946",      "8376_00000000", 0);
		assert_div(      ".41F6",  true,                      "2908058A",      "9F3F_00000000", 0);
		assert_div(       ".611",  true,                    "2_D710A5AD",    "77D9DD_00000000", 1);
		assert_div(      ".874D",  true,                   "51_2CB32DA7",    "9996C3_00000000", 1);
		assert_div(      ".C6B4",  true,                   "37_3493EDD0",    "471FC4_00000000", 1);
		assert_div(      ".8F4A",  true,                 "3961_EC5F2D12",  "6684FE15_00000000", 1);
		assert_div(      ".1835",  true,                  "7D7_8F0E602E",  "52EED136_00000000", 1);
		assert_div(      ".45CA",  true,                 "3D32_799D6EF8",  "E07BB5CC_00000000", 1);
		assert_div(    ".265E77",  true,                      "1FEC9903",        "D5_00000000", 0);
		assert_div(    ".66299F",  true,                       "BF8E0A2",        "1E_00000000", 0);
		assert_div(    ".2AA8F1",  true,                      "12D49261",        "71_00000000", 0);
		assert_div(    ".A39579",  true,                    "3_91215C6D",       "595_00000000", 1);
		assert_div(    ".409FEC",  true,                   "13_42284A38",      "4C4A_00000000", 1);
		assert_div(     ".C8530",  true,                    "4_EDC24850",      "64C7_00000000", 1);
		assert_div(    ".9ACC61",  true,                 "91DA_1988208B",    "F1346B_00000000", 1);
		assert_div(    ".CD4532",  true,                 "8977_AD7418A0",    "AB70D0_00000000", 1);
		assert_div(    ".3CA679",  true,                 "2974_C6AFC93E",    "AEFBAE_00000000", 1);
		assert_div(    ".174715",  true,                "5AD19_3FD41AC9",  "3E6CB1E5_00000000", 1);
		assert_div(    ".CFEF1E",  true,               "4078C5_4B539382",  "4F6001AF_00000000", 1);
		assert_div(    ".435009",  true,                "F6082_8CAA85F9",  "3A7B2271_00000000", 1);
		assert_div(          "0", false,                   "19_27189E0C",        "53_00000000", 0);
		assert_div(          "0", false,                   "3E_CACC9C00",        "80_00000000", 0);
		assert_div(          "0", false,                   "2B_280478C0",        "B3_00000000", 0);
		assert_div(          "0", false,                 "26A3_A5F28A40",      "B955_00000000", 0);
		assert_div(          "0", false,                 "4871_5460F128",      "98EF_00000000", 0);
		assert_div(          "0", false,                 "6725_514E7EEC",      "96EC_00000000", 0);
		assert_div(          "0", false,               "25B3F6_1BD2F9F7",    "6E6225_00000000", 0);
		assert_div(          "0", false,               "93F58A_2BA7B310",    "E0E814_00000000", 0);
		assert_div(          "0", false,               "227952_44FB938C",    "C26C01_00000000", 0);
		assert_div(          "0", false,             "33D53676_FFF5DD76",  "B91FDA01_00000000", 0);
		assert_div(   ".B6BA424",  true,              "1A5127C_C2F39830",  "24DEB4AC_00000000", 1);
		assert_div(  ".231BD3F9",  true,              "4CAD324_627321C9",  "22F19051_00000000", 1);
		assert_div(         "4C", false,                 "11D2_DFC9CE58",        "3C_00000000", 0);
		assert_div(         "A1", false,                 "24B0_83BBB89C",        "3A_00000000", 0);
		assert_div(         "20", false,                  "263_F1DA56AE",        "13_00000000", 0);
		assert_div(         "7E", false,                "8B236_C3872FE2",      "11A6_00000000", 0);
		assert_div(         "8B", false,               "29F460_A6C20486",      "4CF2_00000000", 0);
		assert_div(         "68", false,               "381150_A8828ECC",      "88FA_00000000", 0);
		assert_div(         "47", false,             "38422C45_14CB40BA",    "CA175B_00000000", 0);
		assert_div(         "16", false,              "A663282_DB58F31C",    "749052_00000000", 0);
		assert_div(         "74", false,             "4A321C83_45370FC8",    "A2AD24_00000000", 0);
		assert_div(         "FF", false,           "B_483DE3E2_0174F938",   "B4EB5F4_00000000", 0);
		assert_div(         "B5", false,          "2E_3DCF7F38_2537D940",  "414E6BD0_00000000", 0);
		assert_div(         "B7", false,          "18_05A87072_3908457C",  "216D657E_00000000", 0);
		assert_div(       "1277", false,                "36404_55FFD5C2",        "2F_00000000", 0);
		assert_div(       "680E", false,               "1E1427_EBA31198",        "4A_00000000", 0);
		assert_div(       "4BFB", false,               "482012_6995ADF0",        "F3_00000000", 0);
		assert_div(       "85BB", false,             "42FCBD68_946DB3B1",      "803B_00000000", 0);
		assert_div(       "ED90", false,             "EAFCF1FB_39ACB606",      "FD39_00000000", 0);
		assert_div(        "77A", false,              "68AE036_68E50691",      "DFFF_00000000", 0);
		assert_div(       "70FB", false,          "39_B65CE1F0_6DEB2610",    "82C4C1_00000000", 0);
		assert_div(       "7EDE", false,          "18_A9C80923_0F811300",    "31C44B_00000000", 0);
		assert_div(       "CE5D", false,          "64_8B67C2C4_E50851DA",    "7CBA3D_00000000", 0);
		assert_div(       "E3B7", false,        "52CF_77048783_35BF2508",  "5D1881C8_00000000", 0);
		assert_div(       "4640", false,         "B03_5E3C6B92_12B58A40",  "2821E13A_00000000", 0);
		assert_div(       "95CC", false,        "5F1B_C95B5733_CCC8B204",  "A2896D46_00000000", 0);
		assert_div(     "930389", false,             "7C0AFBEB_98D9B6F8",        "D8_00000000", 0);
		assert_div(     "9582B2", false,             "268BB1EE_32798FD8",        "42_00000000", 0);
		assert_div(     "3930FE", false,             "26DF4CE0_62F6225A",        "AE_00000000", 0);
		assert_div(     "7963A3", false,          "53_DDC50502_5AC9D614",      "B0DE_00000000", 0);
		assert_div(     "C2287E", false,          "71_7A2884A4_E5DD6E14",      "959F_00000000", 0);
		assert_div(     "4E767E", false,          "2F_30377F12_A4958740",      "99F6_00000000", 0);
		assert_div(     "842836", false,        "19B5_85838CF6_EFFE3202",    "31CCFE_00000000", 0);
		assert_div(     "D61BBB", false,        "210D_1D5A4FE0_848F3718",    "278496_00000000", 0);
		assert_div(     "FA2F12", false,        "525E_AA2A2EF7_C1020A40",    "5448E0_00000000", 0);
		assert_div(     "DEEB19", false,       "E437F_CBA3BE81_C7DA761B",  "10616407_00000000", 0);
		assert_div(     "79E1E0", false,      "21129C_FB79B38D_DB166240",  "457728A0_00000000", 0);
		assert_div(     "218CA9", false,      "11B7E7_DB18FA71_05705BF0",  "87335955_00000000", 0);
		assert_div(     "6FECDE", false,              "A0E47F9_5974B8AC",        "17_00000000", 0);
		assert_div(   "8A664DBD", false,          "26_ECC5DD2C_ADCBA900",        "48_00000000", 0);
		assert_div(    "483C4E6", false,           "1_F9A624D1_30D86A30",        "70_00000000", 0);
		assert_div(   "57ECACC3", false,        "368D_EA659BF7_984DA7E2",      "9ED7_00000000", 0);
		assert_div(   "CA8CBA46", false,         "6D4_92E0141D_A7AD11C4",       "8A2_00000000", 0);
		assert_div(   "B9AA0592", false,        "27CD_0B9BD3DF_25749A64",      "36E1_00000000", 0);
		assert_div(   "7D6857D8", false,      "3CA1C9_B63E3199_1724EE6E",    "7BC54E_00000000", 0);
		assert_div(   "B1AC98C6", false,      "723F95_373AC1C6_0BA8C2EA",    "A49D12_00000000", 0);
		assert_div(   "C4207C8D", false,      "2C78D5_C1E55953_869FF998",    "3A0C5E_00000000", 0);
		assert_div(   "564A39FB", false,    "30347A35_1F805793_62A4F7C0",  "8F0302D0_00000000", 0);
		assert_div(   "6284C28C", false,    "436857C4_1207D63F_AB957C00",  "AF288200_00000000", 0);
		assert_div(   "A0237E99", false,    "25F356E0_868E255E_BF747E61",  "3CAB1593_00000000", 0);
		assert_div("32_0C23715B", false,         "73B_C11F6227_BADCBF1A",        "25_00000000", 0);
		assert_div("57_B8951FE5", false,        "3782_CE5E2F33_47480138",        "A2_00000000", 0);
		assert_div("38_BB8A77D7", false,        "364B_7B84B0C7_72613462",        "F5_00000000", 0);
		assert_div("E0_B06F94FD", false,      "2E6A32_6CC4EBB4_F352745C",      "34E2_00000000", 0);
		assert_div("52_AFD85F1E", false,      "2AA6DE_7F085E0D_7C247966",      "840D_00000000", 0);
		assert_div("18_CFCF9A85", false,      "1163C5_D4A08351_46ED2650",      "B36C_00000000", 0);
		assert_div("2E_48F94D58", false,    "26F85975_AB771572_A73F3AF8",    "D78A9F_00000000", 0);
		assert_div("55_2009F6EF", false,    "196165D5_329E112C_9C9CEC70",    "4C53DD_00000000", 0);
		assert_div("C2_2BBEB171", false,    "63F9AF0A_E9533467_44D52608",    "83CF63_00000000", 0);
		assert_div("2B_98D15FAE", false, "23_0407BD98_F2BB4EBD_A227C9A4",  "CD9C86CA_00000000", 0);
		assert_div("7A_AFD8583A", false, "57_4058CCA8_977A71A7_81B6550A",  "B60F4C8E_00000000", 0);
		assert_div("B3_F03D4CDC", false, "AC_46EAF1D0_AC33C82F_66CA2CD8",  "F5199C3D_00000000", 0);

		assert_div(  ".4B7E6442",  true,                    "3_D56B175A",         "D_00000000", 1);
		assert_div(  ".42B9B3A9",  true,                   "25_CB2EC2B9",        "91_00000000", 1);
		assert_div(  ".ABA2CCC4",  true,                   "45_0E8062DC",        "67_00000000", 1);
		assert_div(  ".5DA0DAAF",  true,                  "2FC_C0DA3365",       "82B_00000000", 1);
		assert_div(   ".A300944",  true,                   "7F_39E3B634",       "C7D_00000000", 1);
		assert_div(  ".5F481A80",  true,                 "1726_D1106200",      "3E34_00000000", 1);
		assert_div(  ".AABF72C9",  true,               "6FD2D4_D64AA03D",    "A7A7D5_00000000", 1);
		assert_div(  ".B20C26C5",  true,                 "1578_8520DB9B",      "1EDF_00000000", 1);
		assert_div(  ".8500AC43",  true,               "233173_E1D20DBB",    "43BD29_00000000", 1);
		assert_div(   ".A0F98C0",  true,              "2540230_980FA980",  "3B3D6CA2_00000000", 1);
		assert_div(  ".B98F56A6",  true,             "53C62182_A1724282",  "7393429B_00000000", 1);
		assert_div(  ".69B7A6E4",  true,             "4E5FF4D4_DBACBE8C",  "BDC9E23B_00000000", 1);
	}
	{ // u64 / u64
		assert_div("3", false, "C0_D82B60B7", "3F_94012689", 0);

		assert_div(".1", false,     "D5",     "A6_F876C2CC", 0);
		assert_div(".1", false,     "EA",     "95_45C8C2C8", 0);
		assert_div(".4", false,   "BD3B",   "2C6D_F8547428", 0);
		assert_div(".1", false, "924236", "593699_6A85FB45", 0);

		assert_div("ED8FC8DBw-2", false, "D9",       "E9_D7AABA91", 1);
		assert_div( "4DABB11w-2", false, "3E",      "CC5_99831F39", 1);
		assert_div( "10A38B9w-2", false, "31",     "2F1E_5F77E7AD", 1);
		assert_div( "34728A2w-2", false, "5A",     "1B74_C0EF9FED", 1);
		assert_div(   "1FBE1w-2", false, "9E",   "4FA3FD_1C9058BA", 1);
		assert_div(   "1952Cw-2", false, "87",   "554BE7_7BF59BD8", 1);
		assert_div(   "119ACw-2", false, "91",   "83C8C8_F383258A", 1);
		assert_div(      "EAw-2", false, "62", "6AD31D61_F6E63FEF", 1);
		assert_div(     "27Ew-2", false, "BB", "4AEBC729_A10B523C", 1);
		assert_div(     "30Ew-2", false, "F6", "507CCB59_0963C39B", 1);

		assert_div( "32w-1", false, "31AF", "FB_35F1C3B7", 0);
		assert_div("104w-1", false, "DD91", "DA_0F488000", 0);
		assert_div( "21w-1", false, "170D", "AE_586A3D48", 0);

		assert_div("2367FD23w-2", false, "164E",     "A145_6ACB9812", 1);
		assert_div("7FA94C44w-2", false, "59CC",     "B411_F8EB8931", 1);
		assert_div(  "426E76w-2", false, "2861",   "9B9A98_EB5CB906", 1);
		assert_div(  "8E679Ew-2", false, "70AD",   "CA8E72_BB032ED1", 1);
		assert_div(  "3E6326w-2", false, "2FDB",   "C45EBC_124B6B86", 1);
		assert_div(   "2E8D4w-2", false, "FAE5", "563BA532_778CFFCE", 1);
		assert_div(   "4A1D8w-2", false, "DD3A", "2FC22444_8CD89A37", 1);
		assert_div(   "1D327w-2", false, "F2C2", "8507DF45_B7E477C1", 1);

		assert_div(".24186", false, "6AB86E",   "2F_4E55B3BD", 0);
		assert_div(  ".AFB", false,  "403DF",   "5D_955D9F35", 0);
		assert_div( ".DF94", false, "B4EC37",   "CF_2870AC3C", 0);
		assert_div(  ".303", false, "8BEDCA", "2E70_7EC5D295", 0);
		assert_div(  ".950", false, "9F84C4", "1120_ED24CEEB", 0);
		assert_div(  ".2A7", false, "DA06FC", "5226_D39E548B", 0);

		assert_div(       "4FA91BE9w-2", false,                      "4434A1",    "DB3014_9C69D803", 1);
		assert_div(        "B57947Dw-2", false,                       "B3ADE",    "FD77ED_D7CB75B9", 1);
		assert_div(        "44FFA00w-2", false,                      "6E5FAA",  "19982D56_1DC35086", 1);
		assert_div(         "5012B6w-2", false,                      "4028A5",  "CD1EE1EE_585D2226", 1);
		assert_div(         "332BD3w-2", false,                      "2AD2DE",  "D63D2F99_957A471E", 1);

		assert_div(         ".8B4C4C", false,                      "31272DB4",        "5A_5530CDB9", 0);
		assert_div(         ".495E26", false,                      "2EF089BB",        "A3_C8F2A67A", 0);
		assert_div(        ".115BF98", false,                      "B6542361",        "A8_0D468FAE", 0);
		assert_div(           ".3B00", false,                      "3980EA25",      "F97E_DA5E8B0D", 0);
		assert_div(          ".BE7A4", false,                      "CB384D7A",      "1112_0159A9B7", 0);
		assert_div(           ".CEA1", false,                      "936CF11E",      "B6A6_1372615B", 0);
		assert_div(            ".1C1", false,                      "4F2BF865",    "2D14F6_FD89623A", 0);
		assert_div(            ".203", false,                      "6B1D3C3D",    "352732_4C262F42", 0);
		assert_div(             ".83", false,                      "831A7FF3",    "FF8217_14E3A7B2", 0);
		assert_div(              ".3", false,                      "B55EF007",  "39D52031_F888B9B1", 0);

		assert_div(       "30C51780w-2", false,                      "2EA58364",  "F4DAAE07_78D7C38C", 1);
		assert_div(              "1w-1", false,                      "AF04F4A5",  "5ECD7CCF_4A38E236", 0);
		assert_div(       "9EBC7775w-1", false,                   "72_0E42F3F2",        "B7_F12A260E", 1);
		assert_div(       "8B82B195w-1", false,                   "88_F34AEDC9",        "FB_4D5900CC", 1);
		assert_div(        "5F6186Ew-1", false,                   "F4_19CBE2D2",      "28F2_8F82216A", 1);
		assert_div(        "244B36Aw-1", false,                   "A2_B8EFA769",      "47BC_51BDE1EE", 1);
		assert_div(        "5026EFCw-1", false,                   "B8_E29D00FC",      "24E8_28E8F8AA", 1);
		assert_div(           "6B4Dw-1", false,                   "55_7E4963E3",    "CBF721_80DD9C1B", 1);
		assert_div(           "EDFFw-1", false,                   "81_47B6D9C5",    "8B0EC8_285347B8", 1);
		assert_div(           "9762w-1", false,                   "60_A43252B7",    "A36D00_8985C39C", 1);
		assert_div(            "132w-1", false,                   "9B_0AB88824",  "818D3CE0_46BF571A", 1);
		assert_div(             "AAw-1", false,                   "35_DB412329",  "50F1F233_2A42BB2E", 1);
		assert_div(            "115w-1", false,                   "F4_B6E7918B",  "E2233716_0932344F", 1);

		assert_div(             "10A", false,                 "FD57_631D77F2",        "F3_8F971DFB", 0);
		assert_div(              "F9", false,                 "A130_E16D0237",        "A5_8A7B7D24", 0);
		assert_div(              "D7", false,                 "AB8C_2A867A01",        "CB_907FCE64", 0);
		assert_div(               "1", false,                 "7FF9_B3DEFA78",      "48A7_722AD2B5", 0);

		assert_div(       ".EB88C9B8", false,                 "2844_01CD464B",      "2BC3_AC844C4C", 1);
		assert_div(       ".64714CC9", false,                 "4ED7_B501D973",      "C8F2_9DCC07EB", 1);
		assert_div(        ".12D0480", false,                 "C244_61062C45",    "A536D5_8EEF3A2B", 1);
		assert_div(        ".4ED6C9D", false,                 "7E62_DEB2251F",    "19A643_F8FE3E9A", 1);
		assert_div(         ".CF1CED", false,                 "35FD_E94DA4FD",    "42BC70_4D24235D", 1);
		assert_div(          ".12587", false,                 "F991_D6F45696",  "D9A98596_354A5C8D", 1);
		assert_div(           ".9215", false,                 "7043_271EA042",  "C4BAA5A3_CC501477", 1);
		assert_div(          ".16100", false,                 "CBC3_F5204AE1",  "93C5CF00_B45E36CB", 1);
		assert_div(           "11827", false,               "50D72C_EAA000C9",        "49_DED3D2F4", 0);
		assert_div(            "6697", false,               "495FF0_2970ED18",        "B7_180860F8", 0);
		assert_div(           "12D03", false,               "A0768A_350B5045",        "88_77872FDC", 0);
		assert_div(              "6B", false,               "555771_C05CBFCA",      "CB89_756DA07A", 0);
		assert_div(             "335", false,               "B10F64_0A70C54E",      "372C_164AF9FF", 0);
		assert_div(             "13A", false,               "E45773_5C9CD9C1",      "B9DD_9B5832DF", 0);
		assert_div(       ".CD0440B3", false,               "B05F02_90BCE46D",    "DC3B21_B1AF43AF", 1);
		assert_div(       ".2CD4EF0B", false,               "19CB62_64E77653",    "934AE1_FFA51AF0", 1);
		assert_div(       ".F36F173C", false,               "8CDB0C_7ADBF303",    "94206A_617D1C84", 1);
		assert_div(        ".17E3A52", false,               "6AF335_C04170CC",  "47A16F53_B4C1322F", 1);
		assert_div(        ".80D7C84", false,               "9A9998_B6BDF008",  "1332D5AA_52236CB3", 1);
		assert_div(         ".AB961A", false,               "4B3F1B_707225C2",  "7043CA7C_2EF6B179", 1);
		assert_div(          "FED6A3", false,             "C49F9ED5_F1870E24",        "C5_850D3C98", 0);
		assert_div(         "202A894", false,             "F936B2F4_922F87D6",        "7B_F6921781", 0);
		assert_div(         "3E3FD51", false,             "41165351_9C07000D",        "10_BABB2B43", 0);
		assert_div(           "13A26", false,             "60D11681_59B643EA",      "4EE5_3E38C7F6", 0);
		assert_div(            "FFDB", false,             "EE139903_0B961BA7",      "EE35_AA427137", 0);
		assert_div(            "B524", false,             "7509411B_209DD49E",      "A566_5AD0C6B1", 0);
		assert_div(             "693", false,             "5F9CE5E7_6472BCEF",     "E894D_BE79E398", 0);
		assert_div(              "79", false,             "123701DA_CF6568F0",    "263B90_A8C16636", 0);
		assert_div(             "3DA", false,             "A019C5E5_90590612",    "2987F0_73732E86", 0);
		assert_div(       ".75B3F862", false,             "379456E1_7BB69EF6",  "78E22637_854C5AB2", 1);
		assert_div(       ".211DA7C1", false,             "16D3C858_5FCF6BC0",  "B07701C3_93D04879", 1);
		assert_div(       ".D8C99E6F", false,             "9FB7354B_364FA50D",  "BC9ADD99_7532F8A8", 1);
		assert_div(        "BB3ED2FB", false,          "2C_0BA43278_A3F84817",        "3C_37F0F7F0", 0);
		assert_div(        "EA4CD803", false,          "6F_2974DADE_36365687",        "79_750EE602", 0);
		assert_div(        "DC5B832A", false,          "AF_62761937_FD1EAACF",        "CB_C0BA67B7", 0);
		assert_div(          "A8B4FD", false,          "99_9DDCFAB1_3C260A98",      "E919_FF41D875", 0);
		assert_div(          "FFC87E", false,          "B7_3B2D7AB7_87468550",      "B762_F035317E", 0);
		assert_div(          "4D3C04", false,          "46_561BEEEF_100608A2",      "E922_C0890943", 0);
		assert_div(            "DE63", false,          "74_227C6880_2841E08B",    "85AF99_DA29BE9F", 0);
		assert_div(            "D4BB", false,          "59_135440DA_3DB28876",    "6B3139_B42E4959", 0);
		assert_div(            "42F1", false,          "40_30A651AC_98CA6AFC",    "F577C1_A941361E", 0);
		assert_div(             "262", false,          "8D_D5A18BB3_E9826070",  "3B761131_5A91898D", 0);
		assert_div(            "1FD5", false,          "F6_3F3FBC26_E0F05C36",   "7BC5882_B9E520DF", 0);
		assert_div(             "1B5", false,          "F7_22A7AF05_E2131BC3",  "908B150E_D4F86A47", 0);
		assert_div(    "26F_A7D1F6A2", false,        "7B43_6E6F7B32_CDC23D65",        "32_98F7D7CD", 0);
		assert_div(     "FC_D0A21A27", false,        "E91A_CBB34998_D85D8C6F",        "EC_0A9800FB", 0);
		assert_div(    "22D_B15F4456", false,        "B5A5_A1AEA1E1_240B5E6B",        "53_61D4CD6A", 0);
		assert_div(        "E60D4372", false,        "DF9B_FFEF7D16_229CB771",      "F8D4_B610952E", 0);
		assert_div(      "3_C1EF0607", false,        "6E0E_297D836E_77A8D7B2",      "1D4A_01C9720D", 0);
		assert_div(      "3_1BF2BCA8", false,        "DB5D_3E2A43F1_714FAE63",      "468D_CBE021EB", 0);
		assert_div(          "676720", false,        "54C9_F1F3A246_04C11C52",    "D1EA95_AE77B2DE", 0);
		assert_div(         "6E62579", false,        "30FC_F2B3AEC4_F8F90611",     "719CA_2960DA92", 0);
		assert_div(          "3DD3C9", false,        "3800_06B736D2_0956ABE1",    "E7DF42_CD30627D", 0);
		assert_div(           "12521", false,        "B5A3_605D804D_11923207",  "9EA16DF7_7E42A35A", 0);
		assert_div(           "AE54A", false,        "FAB2_40DE6A81_249C48AC",  "170241F1_2191577F", 0);
		assert_div(           "22084", false,        "BCD5_31253341_E6556190",  "58C71F9C_D068888C", 0);
		assert_div(   "457B_30458DD5", false,      "25261F_01ED0E45_81F5E514",        "88_DF8FE4DB", 0);
		assert_div(  "3ABFB_D61BB8D1", false,      "83474A_E15147D1_AFE21A75",        "23_C0C85F60", 0);
		assert_div(   "1B85_4074BB9E", false,      "137B44_9ED80805_7AA875A2",        "B5_3852C842", 0);
		assert_div(     "3A_3231D44E", false,      "184F2B_58B7AA0B_71BB9951",      "6AEF_3CEFDA13", 0);
		assert_div(    "1A0_6AF01474", false,      "9041D3_8F137C00_C276E73F",      "58AF_3FE47433", 0);
		assert_div(     "F1_57ED369A", false,      "713ED5_A62D539D_82800892",      "781F_6AEE14B8", 0);
		assert_div(        "F19DCDA9", false,      "D6EFC4_D5F6ACD6_37F41005",    "E3BB5E_828D1345", 0);
		assert_div(        "2E16EE7D", false,       "89CCF_05BEEADE_DF6061D9",    "2FD664_5B46948A", 0);
		assert_div(      "7_49AF260C", false,      "706840_61275921_2BB14662",     "F6C89_1D0AE91D", 0);
		assert_div(         "1754A77", false,      "F730AE_9B8076BC_45F516CC",  "A98566D0_C5F3E75B", 0);
		assert_div(         "1CD8979", false,      "774A93_FF975072_6FF1704F",  "422AC8D1_CA7B3FC9", 0);
		assert_div(          "79243B", false,      "75CAC6_FB641E52_5A18906D",  "F8EBFF6D_E186A95C", 0);
	}
	{ // u96 / u64
		assert_div( "2C1874_1397B22D", false,    "23FCC298_74283E1E_2F547303",        "D0_ED667039", 0);
		assert_div( "AFCDA5_48AEB61F", false,    "717832B7_AB30C854_E8684D5C",        "A5_3B32A9BD", 0);
		assert_div( "669914_211FC7B4", false,    "3A47AD8A_0FBEF53A_906D3344",        "91_6B39C71F", 0);
		assert_div(   "61D3_F8AC30B9", false,    "4B67BA9F_CA3FAA06_AC01FF0F",      "C552_B822BE47", 0);
		assert_div(  "5025A_10B27963", false,    "C2269149_E68926B5_B278BE2C",      "26C2_4860E822", 0);
		assert_div(   "4C14_8FE295D1", false,    "48F65DBE_E727CC3F_5661C18F",      "F582_2DC46A98", 0);
		assert_div(     "3A_90B5112B", false,    "2FD8E523_A4EA26DA_F3F0B760",    "D12645_37B7A847", 0);
		assert_div(     "BB_35F94084", false,    "BA2BCAFC_0EBC4F15_3CFDFE5D",    "FE9403_62E1E602", 0);
		assert_div(     "C6_CA1BEE72", false,    "B3385C2D_132D76C4_174B8E27",    "E6CC79_15F813CA", 0);
		assert_div(      "1_DC19E4F6", false,    "D0A13D2E_3BA442E3_4E4AF359",  "702E31A9_1510DE9C", 0);
		assert_div(        "7B5705FD", false,    "22BBD303_4D9A7284_E664760D",  "48178E32_13E637E1", 0);
		assert_div(        "1DC2E8CD", false,     "F4CFCDE_4FF570E8_232FBC2D",  "839CF92A_A09F6183", 0);
	}
}

def test_div(r: LibTest) {
	var t = FpSketchTester.new(r);
	def assert_div = t.assert_div;
	{
		// u96 / u32 cases.
		assert_div("FE6_0968CB0D_1E49AC90", false,    "87234_FFABDEF8_1723ACBD",       "88", 0);
		assert_div(       "FD426_D8340062", false,    "87234_FFABDEF8_1723ACBD", "8899AAEE", 0);
		assert_div(     "FD426F3_C81B4579", false,    "87234_FFABDEF8_1723ACBD",   "8899AA", 0);
		assert_div(       "FB694_E4559290", false,    "87234_3FABD2F8_1723ACBD", "899AAEE1", 0);
		assert_div(       "FB694_E472CE34", false,    "87234_3FABD2F8_1723ACBD", "899AAEE0", 0);
		assert_div(       "BE043_B1C1AE8B", false,    "66231_3FABD2F8_D723EC12", "899AAEE0", 0);
		assert_div("DBB_92D21DBD_4031C7E6", false,    "66231_3FABD2F8_D723EC12",       "77", 0);
		assert_div( "8B_4FD03BA8_9E4AC647", false,    "66231_3FABD2F8_D723EC12",      "BBB", 0);
		assert_div(       "66231_3FB2352A", false,    "66231_3FABD2F8_D723EC12", "FFFFFFFF", 0);
		assert_div(    "21F66231_61A2352A", false, "21F66231_3FABD2F8_D723EC12", "FFFFFFFF", 0);
		assert_div(  "1_EC314FA8_E3510E31", false, "21F66231_3FABD2F8_D723EC12", "11AA22EE", 0);
	}
	{
		// u32 / u64 cases.
		assert_div(       "0w-1", false,        "1", "F_11AA22EE", 0);
		assert_div(       "1w-1", false,       "15", "F_11AA22EE", 0);
		assert_div(     "B49w-1", false,     "AA15", "F_11AA22EE", 0);
		assert_div(    "AA15w-1", true,      "AA15", "1_00000000", 0);
		assert_div("FFFFAAFFw-1", true,  "FFFFAAFF", "1_00000000", 0);
	}
	{
		// u64 / u64 cases.
		assert_div("0", false, "DC_0AB38329", "F8_925FA18A", 0);
		assert_div("4", false, "E7_BE99BA3C", "38_0F6749DB", 0);
		assert_div("0", false, "83_1FBE9A97", "A0_3F67E1D5", 0);
		assert_div("8", false, "65_EEFEB9B1", "0C_19F8C217", 0);
		assert_div("1", false, "9A_B5B18E4C", "77_63D9E650", 0);
		assert_div("0", false, "98_1612AAE6", "A7A7_528F31A7", 0);
		assert_div("0", false, "DD_31B56C31", "E164_39B70F1F", 0);
		assert_div("0", false, "FC_45559294", "0481_94C1C876", 0);
		assert_div("0", false, "2B_5F62CB6F", "23E6_0225E939", 0);
		assert_div("0", false, "A0_5DCFD3F4", "F537_CCE1E2CE", 0);
		assert_div("0", false, "5B_06F8CE96", "F67650_74626BA3", 0);
		assert_div("0", false, "9C_0A0A54DF", "BAC867_B4395300", 0);
		assert_div("0", false, "7E_0C297586", "C42E5B_344117CE", 0);
		assert_div("0", false, "CC_2A22C1C8", "4994DF_62BD576D", 0);
		assert_div("0", false, "8C_C3BCB7F0", "942417_D30CACD2", 0);
		assert_div("0", false, "9F_B679A4AE", "3CA9794D_1B017BC1", 0);
		assert_div("0", false, "07_54039E71", "76577468_604DF79F", 0);
		assert_div("0", false, "7C_7971733D", "84FB732B_3B6D69F6", 0);
		assert_div("0", false, "29_0D45E454", "78A23F52_51496EEE", 0);
		assert_div("0", false, "71_E7F11D8B", "422FF95D_EEA63433", 0);
		assert_div("8", false, "06B6_02627E33", "CE_0E01B767", 0);
		assert_div("B2", false, "8057_894C0FB4", "B7_F85B2A0A", 0);
		assert_div("EC", false, "6B90_140AA09C", "74_6BED0B93", 0);
		assert_div("23E", false, "6453_57A12959", "2C_BD55994A", 0);
		assert_div("10E", false, "D45D_73C5D56F", "C8_ACAA55F8", 0);
		assert_div("2", false, "DBDB_160E0395", "60C5_F888003C", 0);
		assert_div("0", false, "3AA6_5DBEE0AF", "4172_81AB43F6", 0);
		assert_div("0", false, "517C_E6A407B1", "E467_0BD8B594", 0);
		assert_div("1", false, "992C_3372FCD1", "60E4_5AE5C365", 0);
		assert_div("15", false, "2267_8B2CB422", "019F_A11B3893", 0);
		assert_div("0", false, "CC37_D6B1EE40", "C4249A_E7DE22DC", 0);
		assert_div("0", false, "8992_0107CBF6", "9F301D_F3BB0F3C", 0);
		assert_div("0", false, "5F38_68E0CA90", "D16837_7C5AEC96", 0);
		assert_div("0", false, "1765_BC4ACCBD", "1B3574_228E9FB8", 0);
		assert_div("0", false, "A911_44B1AA04", "3B9EAC_6FBF633C", 0);
		assert_div("0", false, "0D64_3EEC75F8", "B0512EBE_52B8A4AC", 0);
		assert_div("0", false, "82F5_3124FB0A", "2ACB2414_1EDB0126", 0);
		assert_div("0", false, "9176_759722AC", "26A56DA1_8B406435", 0);
		assert_div("0", false, "9950_68B19ABE", "D435924D_9DCE78E4", 0);
		assert_div("0", false, "F2AF_7DA9D46D", "AE0C17EF_4F7644F2", 0);
		assert_div("1B483", false, "A7A7B9_A6EBD7E5", "62_52DB29AC", 0);
		assert_div("11EA89", false, "D9DA81_16920DDA", "0C_28DC2F9B", 0);
		assert_div("7164", false, "477F70_70E47A79", "A1_6A72F13D", 0);
		assert_div("883B", false, "615DA2_07EBF51A", "B6_F7337900", 0);
		assert_div("3586", false, "0EAF09_3EDC83AE", "46_3A310A68", 0);
		assert_div("328", false, "8AF23A_3252F148", "2BFD_D95B0A2B", 0);
		assert_div("1F8", false, "4443E0_4F6F20F7", "229C_7BDEC405", 0);
		assert_div("C0", false, "BEF0F5_905E65A4", "FE21_A8E323F0", 0);
		assert_div("C4F", false, "C5F4A0_C3FF3805", "1014_E3487290", 0);
		assert_div("EA", false, "697BA1_61E1BC6C", "7356_B6356FF2", 0);
		assert_div("2", false, "C4282C_E21BF9B8", "484192_06449FF5", 0);
		assert_div("1", false, "BCE0AA_E0F85C1C", "7812D6_ED3F7C4D", 0);
		assert_div("0", false, "12F947_15E523A0", "180B4F_B722B5E2", 0);
		assert_div("7", false, "F8FB9A_0899B187", "217AC5_1ADB952F", 0);
		assert_div("2B", false, "B379E0_C84C4CA7", "041C6F_33511F9C", 0);
		assert_div("0", false, "2F5B39_1F0B1D05", "EF27DD12_2FDC6E08", 0);
		assert_div("0", false, "FE9086_A3915A95", "394BA2B4_42176768", 0);
		assert_div("0", false, "3CDDDC_6F9162AF", "B95E64BE_E1AC7F28", 0);
		assert_div("0", false, "EF7F3B_7CB6105E", "CE39BCDA_19E5A90B", 0);
		assert_div("0", false, "1F63A4_53CFE014", "2A4A4841_1D45E52B", 0);
		assert_div("92CFD13", false, "B972EBC9_9D653191", "14_35F6812A", 0);
		assert_div( "E5458C", false, "94D78E57_B46BCD75", "A6_31A3DECB", 0);
		assert_div("3D809C5", false, "AB6F091C_62D5CF21", "2C_99528E1F", 0);
		assert_div(  "59B4B", false, "0415A939_DE827865", "BA_813ACB1D", 0);
		assert_div("16FF55D", false, "5C09F03B_E7505A10", "40_08C3A87A", 0);
		assert_div(   "5D1F", false, "26E9657B_E0D324B9", "6AF8_7706F912", 0);
		assert_div(  "22528", false, "F81D0CFE_295FDA68", "73A9_9267CEA3", 0);
		assert_div(   "413D", false, "3F6B30C0_8B31706A", "F8D9_DFF6624B", 0);
		assert_div(  "10D42", false, "A7A3A18F_9622C750", "9F61_F437EEBA", 0);
		assert_div(   "6443", false, "3832EA11_9F9FBED8", "8F7E_0F1AB379", 0);
		assert_div(     "7D", false, "200CE6B3_574ECFFF", "419544_E8C6E20B", 0);
		assert_div(    "7CD", false, "7AB9C147_3767300E", "0FBAFB_60C62835", 0);
		assert_div(    "1AF", false, "B2ABDB9A_665DA5B0", "69F7DE_EA9C38EC", 0);
		assert_div(    "3BB", false, "DC069F3D_6091B2A3", "3AED09_DEA2BC55", 0);
		assert_div(   "1CF4", false, "22888983_748409C3", "013154_1065A4A4", 0);
		assert_div(      "2", false, "5C7710A7_BF72B007", "2C055032_FEECBB61", 0);
		assert_div(      "1", false, "FECB5601_B84B9EB1", "FDFD9087_477803D4", 0);
		assert_div(      "0", false, "93D2713C_6835150F", "A8A6C883_B08288B6", 0);
		assert_div(      "0", false, "83FD98DF_B85B290A", "A46DBD0C_5E7921A6", 0);
		assert_div(      "0", false, "4AC8826D_911038F5", "8F76D1AC_D5604838", 0);
	}
	{
		// u32 / u96 cases.
		assert_div("0w-3", false, "95", "DC_D876A491_DC067099", 0);
		assert_div("0w-3", false, "C6", "1AC6_BDE4FD22_DBB40F9C", 0);
		assert_div("0w-3", false, "ED", "614796_62C3EF0D_BFA5B9FD", 0);
		assert_div("0w-3", false, "D8", "436CD468_6A182775_F69501A3", 0);


		assert_div(".00000000_00000050_00000000", false,      "3BBF",       "BE_EED4EE91_C3311F98", 0);
		assert_div(".00000000_00000408_00000000", false,      "C2B7",       "30_4D2164E9_124D3301", 0);
		assert_div(".00000000_000002C6_00000000", false,      "FD58",       "5B_3FAEF74A_EA477968", 0);
		assert_div(".00000000_00000007_00000000", false,      "F016",     "2207_9E60A562_53B3C6DE", 0);
		assert_div(".00000000_00000001_00000000", false,      "89E6",     "5473_A2C90F67_D9216F66", 0);

		assert_div(".00000000_00000000_3B5AF5F5_00000000", false,      "3674",     "EADB_57D61BBB_29E4C155", 1);
		assert_div(".00000000_00000000_0156D2EF_00000000", false,      "B484",   "86CC4C_6BA2BD8C_F7701C02", 1);
		assert_div(".00000000_00000000_002B3B27_00000000", false,       "E4D",   "54AF38_12CE6C3B_294819BE", 1);
		assert_div(".00000000_00000000_00CFF418_00000000", false,      "3642",   "42CB34_F39278F9_00950C05", 1);
		assert_div(".00000000_00000000_000028A3_00000000", false,       "F8F", "62032514_40BB7146_664AB17B", 1);
		assert_div(".00000000_00000000_01FB82F7_00000000", false,      "8EF8",   "481DD8_2B650878_CB4CE6F7", 1);
		assert_div(".00000000_00000000_00002613_00000000", false,      "1EBF", "CEB8B364_57B3242A_8918261C", 1);

		assert_div(".00000000_0000D9A1_00000000", false,    "D3ACCF",       "F8_FDEFD54D_6052091A", 0);
		assert_div(".00000000_00015BC7_00000000", false,    "C242C5",       "8E_FE92E21E_AB503CAC", 0);
		assert_div(".00000000_0000F990_00000000", false,    "A0393B",       "A4_5AA23C26_1FB7BEB5", 0);
		assert_div(".00000000_00000158_00000000", false,    "BD3B18",     "8CAD_A806CF03_46F75DA8", 0);
		assert_div(".00000000_0000023F_00000000", false,    "6D433F",     "3093_2DD591A0_1E9B3E28", 0);
		assert_div(".00000000_00000183_00000000", false,    "B146DA",     "7518_582FABD1_D25938CB", 0);

		assert_div("3962FDA1_00000000w-4", false,    "33AF0C",   "E68F3D_B5DEC4AF_C22490DC", 1);
		assert_div("DA624652_00000000w-4", false,    "C82C36",   "EAA6E8_192E3B14_EA6143C2", 1);
		assert_div("F496F5D2_00000000w-4", false,    "F1A8D2",   "FCEEDD_8C141E73_F6D9A134", 1);
		assert_div( "21C5B2B_00000000w-4", false,    "D37E33", "64327F1C_BF8F587B_07F4F952", 1);
		assert_div(  "D661D8_00000000w-4", false,    "571096", "67F77243_930EA519_E1192F1E", 1);
		assert_div( "1359088_00000000w-4", false,    "C3FB8B", "A2124291_63C9FEC0_DD619E39", 1);
		assert_div("4B15F86D_00000000w-4", false,  "2DF4836E", "9CAE4ECB_E40948B7_6D23E764", 1);

		assert_div( "1A88F05_00000000w-3", false,  "DD59BB4A",       "85_784032C4_71530D11", 0);
		assert_div( "4C061D4_00000000w-3", false,  "B4AC9F41",       "26_0655C0E0_219F74EC", 0);
		assert_div( "23767F4_00000000w-3", false,  "E5CD8D0F",       "67_AE7B2C75_61A08496", 0);

		assert_div(    "450F_00000000w-3", false,  "33C7FDD6",     "BFF2_35E055E6_25F2DB9E", 0);
		assert_div(    "AECC_00000000w-3", false,  "415A4034",     "5FB6_4DC21E3E_EAD7B434", 0);
		assert_div(    "F419_00000000w-3", false,  "A418501F",     "AC18_6D04391C_3BC1363D", 0);
		assert_div(      "A3_00000000w-3", false,  "7A507C55",   "BFC529_CA224DB1_AAB86FE2", 0);
		assert_div(      "C6_00000000w-3", false,  "7DEF0453",   "A2D1E1_1344DBD1_4D746BEA", 0);
		assert_div(      "83_00000000w-3", false,  "274EC98D",   "4CB122_A8CE044D_A3D390C3", 0);

		assert_div(       "2_00000000w-3", false,  "61A3ACEE", "2A6747F8_8177D061_EDAAE596", 0);
		assert_div(       "4_00000000w-3", false,  "E9D8C4C3", "358F44E7_CD8FF031_1B3EC5BC", 0);
	}
	{
		// u96 / u64 cases.
		assert_div("FD42_6D83225C", false, "87234_FFABDEF8_1723ACBD", "8_899AAEE1", 0);
		assert_div("A094D7", false, "621B2EE7_BAF7F50F", "9C_66CC4A57", 0);
		assert_div("44249ABB", false, "EC652208_F3E4D947", "03_781725A0", 0);
		assert_div("C574C4", false, "ADF01135_8D8666E3", "E1_8237EC9E", 0);
		assert_div("7E0AB", false, "03ED78B2_7DE1BF6C", "7F_A2F47301", 0);
		assert_div("3641B61", false, "BCA3D62A_36E1E3BF", "37_A0FFB8A8", 0);
		assert_div("230E9", false, "F60B5391_05321033", "704B_78B020CD", 0);
		assert_div("34190", false, "8574D61E_3DDC8282", "28FC_83694A99", 0);
		assert_div("1735B0", false, "FD918477_EED3947A", "0AEC_D2F9AFF3", 0);
		assert_div("B261", false, "66ECCCDE_BC452EAB", "93B5_B34D6339", 0);
		assert_div("13F9B", false, "E2FA51C8_B34546F8", "B5CE_4B08A881", 0);
		assert_div("16E9", false, "D0014EA8_95001BCC", "0913FC_A465846E", 0);
		assert_div("28D", false, "CDDF605E_34839130", "50A329_9C3BA905", 0);
		assert_div("11A", false, "96713434_89FDC32F", "888F17_140C12F7", 0);
		assert_div("68", false, "0E39AAC3_B5317DDD", "22DA1F_ABC5D38D", 0);
		assert_div("4AD", false, "A1D7885B_0B393614", "229C3F_417E9A49", 0);
		assert_div("2", false, "DCAD0685_05C6C4B1", "62810C87_D8C6E32F", 0);
		assert_div("3", false, "FD16E11A_4D8C0011", "4DE0072A_51065874", 0);
		assert_div("2", false, "D24DE83D_6816E307", "4C79A349_BB769568", 0);
		assert_div("2", false, "CA965FF3_45EAE20D", "48F0759F_73F3AC7C", 0);
		assert_div("1", false, "7A665EE7_AFC42A2C", "470D31B4_D48E3018", 0);
		assert_div("4409AD9C", false, "19_A567B672_F89B1615", "60_7F15D9EF", 0);
		assert_div("2_01C5CDD0", false, "82_21A00510_C9EDDDF5", "40_D7576B1C", 0);
		assert_div("B61C8C6F", false, "31_B23B8A32_DCD94A56", "45_DC0CDE4E", 0);
		assert_div("32DB3605", false, "21_0E6303E2_38C5D3F6", "A6_65E50A9E", 0);
		assert_div("569319A6", false, "4D_3D2882F6_F3A04C2C", "E4_64F8FDFF", 0);
		assert_div("84868E", false, "80_41E2FCD1_5F0B7B42", "F7C1_49B2A25F", 0);
		assert_div("1A2BC20", false, "8D_5718D468_462EF66B", "5669_179AB512", 0);
		assert_div("14B9D2E", false, "7F_952D7E06_597617EA", "627D_D6A2E191", 0);
		assert_div("1C02D0", false, "11_2E1EE43A_F0956923", "9D03_9C4F1259", 0);
		assert_div("190D449", false, "A7_C61B5ED0_3160CFD5", "6B27_33524AAC", 0);
		assert_div("22CF1", false, "27_30D6FAB1_F1E5FF68", "12039C_E3D8512A", 0);
		assert_div("70833", false, "28_FCCCF19A_1FD5CF00", "05D424_D5FA2D5F", 0);
		assert_div("B285", false, "7F_BEC74560_B73074E4", "B72F94_DF1FBC27", 0);
		assert_div("4201", false, "16_3AC2B547_95C8E6B6", "563797_0BFDDBBA", 0);
		assert_div("1607E", false, "47_DC7AFDC4_746D7FAA", "34306E_DFF02EE2", 0);
		assert_div("2F4", false, "F1_36217293_A6A12840", "51935F9E_822E6BC1", 0);
		assert_div("47E", false, "D8_8B18A062_DA158D19", "30314D73_3233B416", 0);
		assert_div("1CC", false, "66_CCEE34B1_8B57A189", "392C9E31_1A607EF0", 0);
		assert_div("225", false, "4F_A245D466_2A8328F3", "251C8AA8_E82DC56E", 0);
		assert_div("A5", false, "4F_9F5AD549_BB967187", "7B72A345_3A64ED8B", 0);
		assert_div("109_C938C31D", false, "DAFC_A2B97609_B303BD77", "D2_EC877B41", 0);
		assert_div("47_5C5C48F9", false, "2465_FC0CBBF3_A88C03FF", "82_936166EC", 0);
		assert_div("1C5_130A4435", false, "92E2_17D1C1C1_CB54F13A", "52_FE42783F", 0);
		assert_div("C8_746BA6BA", false, "A09D_1F71828F_AF580568", "CD_1E844D13", 0);
		assert_div("149_C0C0C1A4", false, "3080_484ECA00_B3833995", "25_A73DE13D", 0);
		assert_div("63A8F54", false, "04B2_70370D64_0AB03A5D", "C10B_E7DD3CA6", 0);
		assert_div("28D7A418", false, "22DA_4061E15C_3E3EA5FA", "DA74_B55A6B41", 0);
		assert_div("6B27D00", false, "0613_EA139357_68F69089", "E852_8A772357", 0);
		assert_div("1_EA03650D", false, "6CC8_41FD65FC_BF9AA8AB", "38D4_E66E9D8C", 0);
		assert_div("12B3170F", false, "0C20_DB0766F1_C59CF564", "A609_F3650D61", 0);
		assert_div("354E62D", false, "736A_244EBD5A_6E34226D", "22A45A_E719EFFE", 0);
		assert_div("AFB4839", false, "8740_7D7A3EB3_7A9AABD0", "0C50F6_9D9C67E0", 0);
		assert_div("179359C", false, "7386_4FFEEB71_349B707B", "4E6724_91815176", 0);
		assert_div("D101D9", false, "C635_043FB9EF_2A8DE7F6", "F2C586_7B3BB96E", 0);
		assert_div("CA899E", false, "9858_80BA344F_356C45E0", "C08F30_D416073E", 0);
		assert_div("6E0A1", false, "34C0_ADC66CC3_975A225A", "07AB9D1A_B6011634", 0);
		assert_div("1EFB4", false, "836A_1E31F67E_F40B60BE", "43DE1034_A379540D", 0);
		assert_div("11219", false, "5D79_171D3D1B_CA1B80A2", "574CD2F0_4B08266F", 0);
		assert_div("10F02", false, "527F_7AC88557_39829502", "4DEDE593_5CB0FC3A", 0);
		assert_div("159E1", false, "D3B0_900FC1E5_E656AF8B", "9CAE3EE0_1DCE965C", 0);
		assert_div("3DA84_2DA68FB8", false, "CB3538_81D76043_7E1A7788", "34_BB746EBF", 0);
		assert_div("4B1C_CFF93BB7", false, "1DCF48_146C26E3_F18C07D2", "65_9913CB53", 0);
		assert_div("F37D_50915F48", false, "C27CB4_93E1DE0C_96FFA620", "CC_7AD945D5", 0);
		assert_div("E8E2_43230148", false, "C64BEB_B6210CFD_4367CB60", "D9_FAC5B1D6", 0);
		assert_div("3CE01_25CD80F8", false, "CDC84B_76471E23_A1D6DA04", "36_16177E93", 0);
		assert_div("C3_BD051634", false, "7F2F77_4D838C82_CE46B4DB", "A657_7E8F04DE", 0);
		assert_div("64_0C653B0C", false, "3D3B89_24C52B4A_7BBA3894", "9CAD_F3493642", 0);
		assert_div("1_B1EF00EA", false, "002D03_B9E5EF1A_D6614F6C", "1A8E_71FF85F6", 0);
		assert_div("2C_4A98F1BB", false, "1BE776_64A5E398_69DC9E06", "A148_863D0538", 0);
		assert_div("32C_A6146083", false, "D62DF9_BFA138A1_E3E52E0E", "4378_7F722BF4", 0);
		assert_div("3_7DBE5058", false, "D19F5C_35F6A69A_4087BB19", "3C0B19_D6565ACE", 0);
		assert_div("105A6E21", false, "0BDAA2_D4796DD9_1B920EAC", "B9915E_4C94DAB9", 0);
		assert_div("55_2F4A0CE7", false, "A66CA6_7A782444_B9236937", "01F424_EE02A913", 0);
		assert_div("14_C2A0BBFF", false, "F5EA3A_7A1EE65A_D54BA95D", "0BD870_456BB35D", 0);
		assert_div("1_84290863", false, "EBF7AC_2559AA07_8A522130", "9BA026_87B8D950", 0);
		assert_div("9B9920", false, "87985C_FC64FE67_97819537", "DF16FDC6_BA5DACDF", 0);
		assert_div("2A11325", false, "A5F760_2CE08447_85C55027", "3F1FD22B_B6A6A7A6", 0);
		assert_div("1E3B98B", false, "F249B0_3665E017_63C9F5A0", "8039A43D_11CD9C29", 0);
		assert_div("19098B5", false, "C0698A_DD230088_E7AA8042", "7AF5E273_D7FA9461", 0);
		assert_div("113CC54", false, "86AB83_9A93671F_0F91820B", "7D00B09F_11DF1C06", 0);
		assert_div("4D66F8_04AB7E94", false, "4A01FE94_90B324A2_DB647DEF", "F4_C5F49536", 0);
		assert_div("66DF51_821AB997", false, "3DA941BE_3B688511_C0ED47E9", "99_71F284DD", 0);
		assert_div("138E4B0_8FA8C53A", false, "9A106C8C_479A75BF_E8705026", "7E_0CFB1E55", 0);
		assert_div("14CAD5D_6022F0C8", false, "7AF0C970_E2BA85B4_656D282F", "5E_9AC5A94C", 0);
		assert_div("5D5BC5_53FBB53F", false, "49283D31_AF62287F_22F48C07", "C8_9B0C3FE1", 0);
		assert_div("1A21_760B6CE1", false, "10507578_4AF65FF9_D17672A2", "9FD4_5C836F00", 0);
		assert_div("C3AF_6F199888", false, "7FCB962F_7911B59C_5CE47041", "A72F_489BBA4A", 0);
		assert_div("1121C_85051F8A", false, "CADFC817_48FA4FC1_98008D16", "BD78_388488CF", 0);
		assert_div("407D_551787FA", false, "32D5DE0B_9DE5513E_7AC921F8", "C9CC_48E29A07", 0);
		assert_div("12D0_D4D39AF5", false, "0C1CC445_75EF7A1D_93367EED", "A4CB_DE36F86C", 0);
		assert_div("BC1_8ECCC662", false, "BDE51678_02CD982B_D3FBDC6C", "102724_7C0CA163", 0);
		assert_div("2A9_86530732", false, "52C35D70_0A20B5E2_7F3A27D5", "1F1693_2FAAF15C", 0);
	}
	{ // sdiv cases
		assert_div(".84210842_00000000", false, "1_00000000_00000000", "1_F0000000_00000000", 1);
		assert_div(".80402010_00000000", false, "1_00000000_00000000", "1_FF000000_00000000", 1);
		assert_div(".AAE3A135_00000000", false, "2_00000000_00000000", "2_FF000000_00000000", 1);
		assert_div(".F00F00F0_00000000", false, "F_00000000_00000000", "F_FF000000_00000000", 1);
		assert_div(".15D19419_00000000", false, "F_00000000_00000000", "AF_FF000000_00000000", 1);
		assert_div(".002CFAEA_00000000", false, "3_00000000_00000000", "1112_FF000000_00000000", 1);
		assert_div(".F7BDEF7B_00000000", false, "1_E0000000_00000000", "1_F0000000_00000000", 1);
		assert_div(".84210849_00000000", false, "1_0000000E_00000000", "1_F0000000_00000000", 1);
		assert_div(".84210841_00000000", false, "1_00000000_00000000", "1_F0000000_F0000000", 1);
		assert_div(".84210849_00000000", false, "1_0000000E_00000000", "1_F0000000_F0000000", 1);

		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000000", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000000", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000000", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000000", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000000", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000000", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000000", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000000", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000000", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000000", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000000", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000000", "3_80000001_80000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000001", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000001", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000001", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_00000001", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000001", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000001", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000001", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_00000001", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000001", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000001", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000001", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_00000001", "3_80000001_80000000", 1);
		assert_div(".AAAAAAAB_00000000",  true,           "1_00000000_80000000", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_80000000", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_80000000", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_80000000", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000000", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000000", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000000", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000000", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000000", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000000", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000000", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000000", "3_80000001_80000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000000_80000001", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_80000001", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_80000001", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000000_80000001", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000001", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000001", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000001", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000000_80000001", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000001", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000001", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000001", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000000_80000001", "3_80000001_80000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_00000000", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_00000000", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000001_00000000", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000001_00000000", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000000", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000000", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000000", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000000", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000000", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000000", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000000", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000000", "3_80000001_80000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_00000001", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_00000001", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000001_00000001", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000001_00000001", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000001", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000001", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000001", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_00000001", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000001", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000001", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000001", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_00000001", "3_80000001_80000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_80000000", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_80000000", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_80000000", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAA_00000000", false,           "1_00000001_80000000", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000000", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000000", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000000", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000000", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000000", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000000", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000000", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000000", "3_80000001_80000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_80000001", "1_80000000_00000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_80000001", "1_80000000_80000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_80000001", "1_80000001_00000000", 1);
		assert_div(".AAAAAAAB_00000000", false,           "1_00000001_80000001", "1_80000001_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000001", "3_00000000_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000001", "3_00000000_80000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000001", "3_00000001_00000000", 1);
		assert_div(".55555555_00000000", false,           "1_00000001_80000001", "3_00000001_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000001", "3_80000000_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000001", "3_80000000_80000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000001", "3_80000001_00000000", 1);
		assert_div(".49249249_00000000", false,           "1_00000001_80000001", "3_80000001_80000000", 1);
		assert_div(".80000000_00000000",  true,           "1_80000000_00000000", "3_00000000_00000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_00000000", "3_00000000_80000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_00000000", "3_00000001_00000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_00000000", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000000", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000000", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000000", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000000", "3_80000001_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000000_00000001", "3_00000000_00000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_00000001", "3_00000000_80000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_00000001", "3_00000001_00000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_00000001", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000001", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000001", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000001", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_00000001", "3_80000001_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000000_80000000", "3_00000000_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000000_80000000", "3_00000000_80000000", 1);
		assert_div(".80000000_00000000",  true,           "1_80000000_80000000", "3_00000001_00000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_80000000", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000000", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000000", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000000", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000000", "3_80000001_80000000", 1);

		assert_div(".80000000_00000000", false,           "1_80000000_80000001", "3_00000000_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000000_80000001", "3_00000000_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000000_80000001", "3_00000001_00000000", 1);
		assert_div(".7FFFFFFF_00000000", false,           "1_80000000_80000001", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000001", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000001", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000001", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000000_80000001", "3_80000001_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000000", "3_00000000_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000000", "3_00000000_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000000", "3_00000001_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000000", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6E_00000000",  true,           "1_80000001_00000000", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_00000000", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_00000000", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_00000000", "3_80000001_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000001", "3_00000000_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000001", "3_00000000_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000001", "3_00000001_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_00000001", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6E_00000000", false,           "1_80000001_00000001", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_00000001", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_00000001", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_00000001", "3_80000001_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000000", "3_00000000_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000000", "3_00000000_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000000", "3_00000001_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000000", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6E_00000000", false,           "1_80000001_80000000", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6E_00000000", false,           "1_80000001_80000000", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6E_00000000", false,           "1_80000001_80000000", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_80000000", "3_80000001_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000001", "3_00000000_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000001", "3_00000000_80000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000001", "3_00000001_00000000", 1);
		assert_div(".80000000_00000000", false,           "1_80000001_80000001", "3_00000001_80000000", 1);
		assert_div(".6DB6DB6E_00000000", false,           "1_80000001_80000001", "3_80000000_00000000", 1);
		assert_div(".6DB6DB6E_00000000", false,           "1_80000001_80000001", "3_80000000_80000000", 1);
		assert_div(".6DB6DB6E_00000000", false,           "1_80000001_80000001", "3_80000001_00000000", 1);
		assert_div(".6DB6DB6D_00000000", false,           "1_80000001_80000001", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000000", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000000", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000000", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000000", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000001", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000001", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000001", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_00000001", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000000", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000000", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000000", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000000", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000001", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000001", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000001", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000000_80000001", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000000", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000000", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000000", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000000", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000001", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000001", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000001", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_00000001", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000000", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000000", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000000", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000000", "3_80000001_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000001", "3_80000000_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000001", "3_80000000_80000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000001", "3_80000001_00000000", 1);
		assert_div(".DB6DB6DB_00000000", false,           "3_00000001_80000001", "3_80000001_80000000", 1);
	}
	{ // hard sdiv cases
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_00000000", "1_00000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_00000000", "1_00000001_00000000", 1);
		assert_div(".FFFFFFFE_00000000", false,           "1_00000000_00000000", "1_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_00000001", "1_00000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_00000001", "1_00000001_00000000", 1);
		assert_div(".FFFFFFFE_00000000", false,           "1_00000000_00000001", "1_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_80000000", "1_00000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_80000000", "1_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_80000001", "1_00000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000000_80000001", "1_00000001_80000000", 1);
	}
	{ // harder sdiv cases
		assert_div(".FFFFFFFF_00000000", false,           "1_00000001_00000000", "1_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_00000001_00000001", "1_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_00000000", "1_80000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_00000000", "1_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_00000000", "1_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_00000001", "1_80000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_00000001", "1_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_00000001", "1_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_80000000", "1_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_80000000", "1_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_80000001", "1_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000000_80000001", "1_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000001_00000000", "1_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "1_80000001_00000001", "1_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_00000000", "3_00000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_00000000", "3_00000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_00000000", "3_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_00000001", "3_00000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_00000001", "3_00000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_00000001", "3_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_80000000", "3_00000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_80000000", "3_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_80000001", "3_00000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000000_80000001", "3_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000001_00000000", "3_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_00000001_00000001", "3_00000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_00000000", "3_80000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_00000000", "3_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_00000000", "3_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_00000001", "3_80000000_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_00000001", "3_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_00000001", "3_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_80000000", "3_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_80000000", "3_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_80000001", "3_80000001_00000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000000_80000001", "3_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000001_00000000", "3_80000001_80000000", 1);
		assert_div(".FFFFFFFF_00000000", false,           "3_80000001_00000001", "3_80000001_80000000", 1);

	}
	{  // hard u96 / u64 cases
		assert_div(".FFD80397_00000000", false,  "666_00000000_00000000", "667_0000FFFF_00000000", 1);
		assert_div(".6666665F_00000000", false,  "666_00000000_00000000", "FFF_0000FFFF_00000000", 1);
		assert_div(".66666666_00000000", false,  "666_00000000_00000000", "FFF_00000000_0000FFFF", 1);
		assert_div(     "FECDF", false,     "F_FCCCCCCC_CCCC0000", "10100_0000FFFF", 0);
		assert_div(    "FEFDCE", false,    "FF_FCCCCCCC_CCCC0000", "10100_0000FFFF", 0);
		assert_div(   "FF00CBF", false,   "FFF_FCCCCCCC_CCCC0000", "10100_0000FFFF", 0);
		assert_div(  "FF00FBCF", false,  "FFFF_FCCCCCCC_CCCC0000", "10100_0000FFFF", 0);
		assert_div("F_F00FECD0", false, "FFFFF_FCCCCCCC_CCCC0000", "10100_0000FFFF", 0);
		assert_div("EC_75EE2DE1", false, "59D3F30E_084B9E4D_3737AC40", "614029_7DD1C136", 0);
		assert_div("1609_C4BE3B62", false, "EB7861A8_03A6E027_677B41FF", "0AAF45_E97CAFA1", 0);
		assert_div("E_96C2A5B1", false, "7A86164F_085A75E8_4ECE23B4", "0865FEDF_CCCA4A7E", 0);
		assert_div("1_B3A4D551", false, "BFF6CCC5_02E3205C_5714CE38", "70CE1346_C3A328BF", 0);
		assert_div("4_B3A656EB", false, "3ED9CA09_08DC6F94_9F5E92B4", "0D5E1488_9473B675", 0);
		assert_div("1_69794880", false, "2D5D7126_F6ED30CA_8071B3D1", "2020C6F5_177F8800", 0);
		assert_div("7_8C45A3D8", false, "F844B80A_C4E38E02_0B5DAADF", "20E4689A_690B4540", 0);
	}
	{ // hard(er) u96/u64 tests
		assert_div(                     "D439F4EC", false,      "8C87AD_4C9B3000_00000000", "A983FC_0CFF3000", 0);
		assert_div(                  "BF_D439F4EC", false,    "7F0600BA_FF000000_00000000", "A983FC_0CFF3000", 0);
		assert_div(                  "BF_D439F4EC", false,    "7F0600BA_FF000000_00000000", "A983FC_0CFF3100", 0);
		assert_div(                  "BF_D439F443", false,    "7F0600BA_8F000000_00000000", "A983FC_0CFF3100", 0);
		assert_div(                  "BF_D439F42D", false,    "7F0600BA_80700000_00000000", "A983FC_0CFF3100", 0);
		assert_div(                  "BF_D439F42D", false,    "7F0600BA_80770000_00000000", "A983FC_0CFF3100", 0);
		assert_div(                  "BF_D439F42D", false,    "7F0600BA_8077009F_00000000", "A983FC_0CFF3100", 0);
		assert_div(                  "BF_D439F42D", false,    "7F0600BA_8077009D_00000000", "A983FC_0CFF3100", 0);
		assert_div(                  "BF_D439F42D", false,    "7F0600BA_8077009D_00000000", "A983FC_0CFF31D0", 0);
		assert_div("BF_D439F42D", false, "7F0600BA_8077009D_FD4E909B", "A983FC_0CFF31D0", 0);
		assert_div("BF_D439F42D", false, "7F0600BA_80770C9D_FD4E909B", "A983FC_0CFF31D0", 0);
		assert_div("BF_D439F42D", false, "7F0600BA_8077DC9D_FD4E909B", "A983FC_0CFF31D0", 0);
		assert_div("BF_D439F436", false, "7F0600BA_8677DC9D_FD4E909B", "A983FC_0CFF31D0", 0);
		assert_div("BF_D58C3C4F", false, "7F06E0BA_8677DC9D_FD4E909B", "A983FC_0CFF31D0", 0);
		assert_div("BF_D58C2A33", false, "7F06E0BA_8677DC9D_FD4E909B", "A983FC_1CFF31D0", 0);
	}
//	System.puts("\n\n=============================================================================\n");
//	TEST.error("done");
}

def test_rev(r: LibTest) {
	var t = FpSketchTester.new(r);
	t.assert_bi(reverse([0x25, 0xdd85d670, 0xd35ec9be, 0xc0000000]), FpSketch.new().addDecDigit(3).mulPow10(30));
}
