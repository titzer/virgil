//@execute 0=10
class L<T> {
	def head: T;
	def tail: L<T>;
	new(head, tail) { }
}
var listA = L<int>.new(10, null);
var listB = L<bool>.new(false, null);

def main(arg: int) -> int {
	apply(listA, fun x => ()); // TODO: type inference
	apply(listB, fun x => ()); // TODO: type inference
	return 10;
}

def apply<T>(var list: L<T>, func: T -> void) {
	while (list != null) {
		func(list.head);
		list = list.tail;
	}
}

