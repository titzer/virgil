//@execute 0=true; 1=true; -1=true
def main(a: int) -> bool {
	var f = float.!(a);

	// Build many live floats and their int truncations
	var u1  = f +  0, u2  = f +  1, u3  = f +  2, u4  = f +  3, u5  = f +  4, u6  = f +  5;
	var u7  = f +  6, u8  = f +  7, u9  = f +  8, u10 = f +  9, u11 = f + 10, u12 = f + 11;

	var i1  = int.!(u1),  i2  = int.!(u2),  i3  = int.!(u3),  i4  = int.!(u4),  i5  = int.!(u5),  i6  = int.!(u6);
	var i7  = int.!(u7),  i8  = int.!(u8),  i9  = int.!(u9),  i10 = int.!(u10), i11 = int.!(u11), i12 = int.!(u12);

	// Round-trip back to float (forces cvtsi2ss and friends)
	var r1  = float.!(i1),  r2  = float.!(i2),  r3  = float.!(i3),  r4  = float.!(i4),  r5  = float.!(i5),  r6  = float.!(i6);
	var r7  = float.!(i7),  r8  = float.!(i8),  r9  = float.!(i9),  r10 = float.!(i10), r11 = float.!(i11), r12 = float.!(i12);

	// For small a in executes above, uK are exact integers; rK==uK is true.
	var c1 = r1 == u1, c2 = r2 == u2, c3 = r3 == u3, c4 = r4 == u4, c5 = r5 == u5, c6 = r6 == u6;
	var c7 = r7 == u7, c8 = r8 == u8, c9 = r9 == u9, c10 = r10 == u10, c11 = r11 == u11, c12 = r12 == u12;

	return c1 & c2 & c3 & c4 & c5 & c6 & c7 & c8 & c9 & c10 & c11 & c12;
}
