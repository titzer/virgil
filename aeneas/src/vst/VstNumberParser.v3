// Copyright 2014 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

component VstNumberParser {
	
	def getVal(np: NumberParser) -> Val {
		if (np.error_msg != null) return null; // parse error
		match (np.vtype) {
			Int(signed, width) => {
				var ival = NumberParserValue.Int.!(np.val).v;
				return if(width > 32, Box<long>.new(long.view(ival)), Box<int>.new(int.view(ival)));
			}
			Float32 => {
				var fval = NumberParserValue.Float.!(np.val);
				return Float.f32(fval.sign, fval.exp, u32.!(fval.mantissa));
			}
			Float64 => {
				var fval = NumberParserValue.Float.!(np.val);
				var res = Float.f64(fval.sign, fval.exp, fval.mantissa);
				return res;
			}
		}
	}

	def getType(np: NumberParser) -> Type {
		if (np.error_msg != null) return null; // parse error
		match (np.vtype) {
			Int(signed, width) => return Int.getType(signed, width);
			Float32 => return Float.FLOAT32;
			Float64 => return Float.FLOAT64;
		}
	}
}