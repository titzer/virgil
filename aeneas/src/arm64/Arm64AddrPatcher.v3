// Copyright 2024 Virgil Authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

class Arm64AddrPatcher {
	def mw: MachDataWriter;
	def mach: MachProgram;
	def asm: Arm64Assembler;
	def ABS_IMM16_MARKER: u16 = 0x3388;
	def REL_IMM26_MARKER: u26 = 0xDD2341;

	new(mw, mach, asm) {}

	def record(addr: Addr) {
		mw.recordArm64Patch(addr, asm.patchKind, asm.patchPos);
	}

	def patch(kind: Arm64PatchKind, posAddr: int, absAddr: int) {
		def pos = mw.pos;
		match (kind) {
			ABS_IMM16 => asm.patch_ABS_i16(pos, u16.view(absAddr));
			REL_IMM26 => asm.patch_REL_i26(pos, i26.view((absAddr - posAddr) / 4));
			_ => unknownPatchKind();
		}
	}

	def unknownPatchKind() {
		mach.fail("Arm64AddrPatcher Encountered Unknown Patch Kind");
	}
}