// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Utilities for the representation of the "bool" type in the compiler.
component Bool {
	def TYPE = TypeUtil.singleType("bool", Kind.BOOL, BoolType.new);
	def ARRAY_T: Array<Type> = [TYPE];
	def ARRAY_TT: Array<Type> = [TYPE, TYPE];
	def ANDAND = V3Op.newVstSugar(VstOperator.BoolAndAnd, TypeUtil.NO_TYPES, ARRAY_TT, TYPE);
	def OROR = V3Op.newVstSugar(VstOperator.BoolOrOr, TypeUtil.NO_TYPES, ARRAY_TT, TYPE);
	def TRUE  = Box.new(true);
	def FALSE = Box.new(false);

	def unbox(val: Result) -> bool {
		if (val == null) return false;
		return (Box<bool>.!(val)).val;
	}
	def box(val: bool) -> Box<bool> {
		return if(val, TRUE, FALSE);
	}
	def toInt(b: bool) -> int {
		return if(b, 1, 0);
	}
}
// The (singleton) {bool} type.
class BoolType extends PrimType {
	new(typeCon: TypeCon) super(typeCon.uid, typeCon, 1) { }
}
