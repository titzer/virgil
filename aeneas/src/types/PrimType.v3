// Copyright 2024 Virgil authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// All primitive types have a bitwidth, which implies a size in bytes.
class PrimType extends Type {
	def width: byte;				// width in bits
	def packedByteSize = byte.!((width + 7) >> 3);	// size in bytes, if packed densely
	def byteSize = computeByteSize(width);		// size in bytes, rounded up to power of 2

	new(hash: int, typeCon: TypeCon, width) super(hash, typeCon, null) { }
}

def computeByteSize(width: byte) -> byte {
	if (width == 0) return 0;
	if (width <= 8) return 1;
	if (width <= 16) return 2;
	if (width <= 32) return 4;
	return 8;
}
