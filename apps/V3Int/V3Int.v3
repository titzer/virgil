// Copyright 2012 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

def main(args: Array<string>) -> bool {
	if (args.length == 0) return printVersion(false, ": no input files\n");
	var compiler = Compiler.new(null);
	var prog = Program.new();
	SystemCalls.install(prog);
	setArgs(prog, args);
	
	var compilation = Compilation.new(compiler, prog);
	compilation.compile();
	if (!prog.reportErrors()) return true;
	var result = compilation.runMain();
	if (Exception.?(result)) {
		var rettype = prog.getMain().getReturnType();
		TerminalBuffer.new()
			.putv(result, rettype)
			.outln();
	}
	return false;
}
def setArgs(prog: Program, args: Array<string>) {
	// parse arguments: "A.v3 ... Z.v3 x y" into {prog.files = ["A.v3", "B.v3"]} and {prog.args = ["x", "y"]}
	for (i = 0; true; i++) {
		if (i == args.length) {
			prog.files = args;
			prog.args = [];
			break;
		}
		var arg = args[i];
		if (!Strings.endsWith(arg, ".v3")) {
			prog.files = Arrays.copy(args, Array<string>.new(i));
			prog.args = Arrays.range(args, i, args.length);
			break;
		}
	}
	// Allocate space for all the input data
	prog.inputs = Array.new(prog.files.length);
}
def printVersion(long: bool, next: string) -> bool {
	Terminal.put("Aeneas ");
	Terminal.put(Version.version);
	var data = Version.buildData;
	if (long && data != null) {
		Terminal.put("\nBuild Data: ");
		Terminal.put(data);
	}
	Terminal.put(next);
	return false;
}
