// This proposal is to allow a layout to be used as a field in a type or class.

// For example:

layout L1 {
	+0	info:	u64;
	+8:	hash:	u32;
	=12;
}

class MyObject {
	var header: L1;
	var more: int;
}

// We could extend Ref.at to allow obtaining a Ref/ref to such a field:

component Comp1 {
	var c = MyObject.new();
	var r1: Ref.at(c.header);
	var u: u64 = r1.info;
}

// We could further give meaning to referring to field directly, as
// producing or consuming a tuple value.  (This would intergrate well
// with named tuple fields, but is entirely independent of that.)  The
// tuple fields are in the order declared.

component Comp2 {
	var c.header = (17u, 35u);
	var tup = c.header;
	var sum: u64 = tup.0 + u64.view(u.1);
}

// It might be a good idea to allow only ref<L> (vs Ref<L>) if the
// field is declared def, not var.

// This extension mainly complicated layout in the compiler.