// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Microbenchmark for switch implementation
component Switches {
	var countAlpha: int;
	var countNumeric: int;
	var countSymbol: int;
	var countOther: int;

	def main(arg: Array<string>) -> int {
		if (arg.length < 2) {
			System.puts("Usage: Switches <count> <file>\n");
			return 1;
		}
		var count = Int.parse(arg[0]);
		var data = System.fileLoad(arg[1]);
		if (data == null) {
			System.puts("File not found: ");
			System.puts(arg[1]);
			System.ln();
			return 1;
		}
		while (count > 0) {
			doSwitch0(data);
			count--;
		}
		print("alpha:  ", countAlpha);
		print("numeric:", countNumeric);
		print("symbol: ", countSymbol);
		print("other:  ", countOther);
		return 0;
	}
	def print(name: string, count: int) {
		System.puts(name);
		System.puts(" ");
		System.puti(count);
		System.ln();
	}
	def doSwitch0(data: Array<byte>) {
		// characteristics of this switch: repeated cases, clustered values
		for (e in data) {
			match(e) {
				'a', 'b', 'c' => countAlpha++;
				'0', '1', '2' => countNumeric++;
				'3', '4', '5' => countNumeric++;
				'6', '7', '8' => countNumeric++;
				'9' => countNumeric++;
				'+', '-', '/' => countSymbol++;
			} else {
				countOther++;
			}
		}
	}
}
