// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A program to test the performance of the functional implementation of lists
class List<T> {
	def head: T;
	def tail: List<T>;
	new(head, tail) { }
}

component Lists {
	def map<A, B>(list: List<A>, func: A -> B) -> List<B> {
		if (list == null) return null;
		return List<B>.new(func(list.head), map(list.tail, func));
	}
	def mapRev<A, B>(list: List<A>, func: A -> B) -> List<B> {
		var result: List<B> = null;
		while (list != null) {
			result = List<B>.new(func(list.head), result);
			list = list.tail;
		}
		return result;
	}
}

component ListMap {
	def LENGTH = 100;
	var cumul  = 0;
	def main(args: Array<Array<byte>>) -> int {
		var max = Util.intArg(args, 1000);
		var list: List<int> = null;
		for (i < LENGTH) {
			list = List<int>.new(i, list);
		}
		for (j < max) {
			Lists.map(list, nothing);
			Lists.map(list, sum);
			Lists.mapRev(list, nothing);
			Lists.mapRev(list, sum);
			print(j);
		}
		Lists.map(list, print);
		Lists.mapRev(list, print);
		System.ln();
		return 0;
	}
	def nothing(val: int) -> bool {
		return true;
	}
	def print(val: int) -> byte {
		System.puti(val);
		System.putc(' ');
		return byte.view(val);
	}
	def sum(val: int) -> int {
		cumul = cumul + val;
		return cumul;
	}
}
